{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/web/components/PluginInjectionSite/module.jsx","webpack:///./src/web/util/EventBus.js","webpack:///./src/web/util.js","webpack:///./src/web/actions/index.js","webpack:///./src/web/store.js","webpack:///./src/web/util/Modules.js","webpack:///./src/web/components/Injected/index.jsx","webpack:///./src/web/reducers/notifications.js","webpack:///./src/web/reducers/skills.js","webpack:///./src/web/reducers/modules.js","webpack:///./src/web/reducers/bot.js","webpack:///./src/web/reducers/user.js","webpack:///./src/web/reducers/ui.js","webpack:///./src/web/reducers/license.js","webpack:///./src/web/reducers/flows.js","webpack:///./src/web/reducers/content.js","webpack:///./src/web/reducers/selectors.js","webpack:///./src/web/actions/BatchRunner.js","webpack:///./src/web/lite.jsx","webpack:///./src/web/reducers/index.js","webpack:///./src/web/util/Auth.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","p","jsonpArray","window","webpackJsonp","oldJsonpFunction","slice","u","e","ReferenceError","InjectedModuleView","state","moduleComponent","TypeError","constructor","writable","configurable","setPrototypeOf","__proto__","React","Component","modName","viewName","lite","_this2","this","moduleName","props","subView","isLite","setState","botpress","setImmediate","setViewInState","script","document","createElement","type","onload","shortName","replace","src","getElementsByTagName","appendChild","viewResolve","prop","startsWith","find","error","Error","loadModule","nextProps","console","log","onNotFound","bp","events","EventBus","axios","extraProps","_react2","_Injected2","_extends","component","_Auth","_this","getPrototypeOf","wildcard","maxListeners","dispatchSocketEvent","event","emit","dispatchClientEvent","from","socket","guestSocket","adminSocket","setup","query","visitorId","getUniqueVisitorId","AUTH_ENABLED","token","getToken","assign","off","dispatchEvent","disconnect","socketUrl","location","origin","_socket2","on","onAny","authEvents","EventEmitter2","hashCode","str","hash","charCodeAt","moveCursorToEnd","el","selectionStart","selectionEnd","focus","createTextRange","range","collapse","select","prettyId","arguments","_generate2","_reduxActions","a","requestFlows","createAction","receiveFlows","flows","receiveAt","Date","requestSaveFlows","fetchFlows","dispatch","then","_ref","_","keyBy","receiveSaveFlows","handleRefreshFlowLinks","saveAllFlows","getState","values","flowsByName","map","flow","startNode","catchAll","links","nodes","skillData","post","updateFlow","renameFlow","createFlow","switchFlow","deleteFlow","duplicateFlow","refreshFlowsLinks","setTimeout","handleFlowEditorUndo","updateFlowNode","switchFlowNode","createFlowNode","removeFlowNode","copyFlowNode","pasteFlowNode","copyFlowNodeElement","pasteFlowNodeElement","openFlowNodeProps","closeFlowNodeProps","handleFlowEditorRedo","receiveContentCategories","flowEditorUndo","flowEditorRedo","setDiagramAction","receiveContentItems","fetchContentCategories","_ref2","receiveContentItemsRecent","fetchContentItems","_ref3","id","count","searchTerm","params","categoryId","_ref4","getBatchedContentRunner","fetchContentItemsRecent","_ref5","_ref5$count","_ref5$categoryId","orderBy","_ref6","_BatchRunner2","ids","join","_ref7","reduce","acc","item","receiveContentItem","receiveContentItemsCount","fetchContentItem","_ref9","_ref9$force","force","_ref9$batched","batched","content","itemsById","Promise","resolve","add","_ref8","licenseChanged","fetchContentItemsCount","upsertContentItem","_ref10","formData","modifyId","deleteContentItems","userReceived","fetchLicense","_ref11","toggleLicenseModal","toggleAboutModal","viewModeChanged","updateGlobalStyle","botInfoReceived","fetchUser","authEnabled","res","roles","modulesReceived","fetchBotInformation","information","allNotificationsReceived","fetchModules","newNotificationsReceived","editSkill","fetchNotifications","replaceNotifications","allNotifications","addNotifications","notifications","buildNewSkill","cancelNewSkill","insertNewSkill","insertNewSkillNode","updateSkill","requestEditSkill","nodeId","node","currentFlow","skillId","skill","flowName","_redux","actions","enhancer","_typeof","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","actionCreators","compose","applyMiddleware","thunk","createStore","reducers","moduleViewNames","position","flatten","filter","Boolean","plugins","plugin","entry","_react","InjectedComponent","componentId","_nanoid2","internalRender","ReactDOM","unmountComponentAtNode","findDOMNode","err","className","render","element","message","href","propTypes","PropTypes","func","isRequired","_howler","_actions","Array","isArray","sound","Howl","reducer","handleActions","_defineProperty","_handleActions","payload","concat","_toConsumableArray","some","play","unshift","installed","menuText","icon","menuIcon","builder","opened","action","editFlowName","editNodeId","licenseModalOpened","aboutModalOpened","viewMode","toString","customStyle","text","licensed","status","_util","w","defaultState","fetchingFlows","currentFlowNode","showFlowNodeProps","currentDiagramAction","currentSnapshot","undoStack","redoStack","nodeInBuffer","buffer","transition","computeFlowsHash","hashAction","forEach","isString","condition","obj","curr","buff","onReceive","onEnter","next","x","y","source","target","link","points","updateCurrentHash","currentHashes","createSnapshot","pick","createdAt","recordHistory","popHistory","stackName","_extends2","oppositeStack","keys","defaultFlow","includes","first","newState","savingFlows","lastModified","_reduceReducers2","_handleActions2","f","json","JSON","stringify","parse","nodeLinks","index","Number","sourcePort","targetNode","remapNode","Math","round","version","omit","flowRandomId","newFlow","generatedFlow","newNode","transitions","_ref12","_extends7","modifiedFlow","_ref13","merge","_ref14","_ref14$payload","flowNameToDuplicate","_ref15","currentNode","needsUpdate","_ref16","flowsToRemove","nodeToRemove","_ref17","_ref17$payload","newNodeId","siblingNames","nameToCopy","copies","_ref18","_ref19","_ref20","modifier","updateCurrentFlow","_ref21","_ref22","_handleActions3","hashes","initialHashes","_handleActions4","categories","currentItems","recentItems","itemsCount","266","canFlowRedo","canFlowUndo","getDirtyFlows","getCurrentFlowNode","getCurrentFlow","currentKeys","initialKeys","union","dirtyFlows","xor","267","execute","_ref$maxQueue","maxQueue","_ref$maxInterval","maxInterval","queue","promises","run","resources","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","return","catch","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","reject","intervalId","setInterval","resourceId","promise","destroy","clearInterval","_reactRedux","_Modules","defaults","headers","common","Authorization","queryString","search","v","platform-webchat","LiteView","isPlugin","_exposeLoaderReactReact2","_module2","mapDispatchToProps","LiteViewConnected","connect","Provider","store","getElementById","73","_selectors","bpApp","combineReducers","license","ui","user","bot","skills","setToken","tokenStr","localStorage","getItem","setItem","time","logout","removeItem","login","password","success","reason","userId","__BP_VISITOR_ID"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,KACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,MAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKApB,GACAqB,EAAA,GAGAZ,KAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,KACAF,YAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,KAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,GAA0CI,cAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,aAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,YAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,cAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAAuB,SAC3B,WAAiC,OAAAvB,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAiB,EAAAC,GAAsD,OAAA9C,OAAAC,UAAAC,eAAAC,KAAA0C,EAAAC,IAGtD9B,EAAA+B,EAAA,OAEA,IAAAC,EAAAC,OAAAC,aAAAD,OAAAC,iBACAC,EAAAH,EAAAjD,KAAA2C,KAAAM,GACAA,EAAAjD,KAAAX,EACA4D,IAAAI,QACA,QAAAzD,EAAA,EAAgBA,EAAAqD,EAAAnD,OAAuBF,IAAAP,EAAA4D,EAAArD,IACvC,IAAAU,EAAA8C,EAIA5C,EAAAR,MAAA,QAEAU,sgBCtJAO,EAAA,IAAAM,EAAAE,EACAR,EAAA,KAAAqC,EAAA7B,EASAR,EAAA,MAAArB,EAAA6B,EACAR,EAAA,eAAAQ,EAAA8B,GAAA,OAAAA,KAAAhB,WAAAgB,GAAAV,QAAAU,GAAA,SAAArC,EAAAqC,EAAAlB,GAAA,IAAAkB,EAAA,UAAAC,eAAA,oEAAAnB,GAAA,iBAAAA,GAAA,mBAAAA,EAAAkB,EAAAlB,EAAA,IAEqBoB,2SACnBC,OACEC,gBAAiB,MAAAzC,EAAAW,EAAAQ,GAAA,gBAAAkB,EAAAlB,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAAuB,UAAA,kEAAAvB,GAAAkB,EAAArD,UAAAD,OAAAwC,OAAAJ,KAAAnC,WAAA2D,aAAAzB,MAAAmB,EAAAxB,YAAA,EAAA+B,UAAA,EAAAC,cAAA,KAAA1B,IAAApC,OAAA+D,eAAA/D,OAAA+D,eAAAT,EAAAlB,GAAAkB,EAAAU,UAAA5B,GAAA,CAAAO,EAF2BsB,UAAMC,iDAKzCC,EAASC,EAAUC,GAAM,IAAAC,EAAAC,KAC5BC,EAAaL,GAAWI,KAAKE,MAAMD,WACnCE,EAAUN,GAAYG,KAAKE,MAAML,UAAY,UAC7CO,EAASN,GAAQE,KAAKE,MAAMJ,SAElC,GAAIG,IAAeD,KAAKd,MAAMe,YAAcE,GAAWH,KAAKd,MAAMW,SAMlE,GAFAG,KAAKK,UAAWlB,gBAAiB,KAAMc,WAAYA,EAAYJ,SAAUA,IAEpEnB,OAAO4B,UAAa5B,OAAO4B,SAASL,GAoBvCD,KAAKK,UAAWlB,gBAAiB,OACjCoB,EAAa,WACXR,EAAKS,eAAeP,EAAYE,EAASC,SAtBS,CACpD,IAAMK,EAASC,SAASC,cAAc,UACtCF,EAAOG,KAAO,kBACdH,EAAOI,OAAS,WACdJ,EAAOI,OAAS,KAChBN,EAAa,WACXR,EAAKS,eAAeP,EAAYE,EAASC,MAI7C,IAAMU,EAAYb,EAAWc,QAAQ,cAAe,IAAIA,QAAQ,gBAAiB,IAG/EN,EAAOO,IADLZ,EACF,eAA4BU,EAA5B,IAAyCX,EAEzC,eAA4BW,EAG9BJ,SAASO,qBAAqB,QAAQ,GAAGC,YAAYT,2CAS1CR,EAAYJ,EAAUO,GACnC,IAKMe,EAAc,SAAAhE,GAClB,IAAMiE,EAAOhB,EAAS,UAAYP,EAClC,OAAOnB,OAAO4B,UAAY5B,OAAO4B,SAASnD,IAASuB,OAAO4B,SAASnD,GAAMiE,IAGrEtE,EAASqE,GATblB,EAAWoB,WAAW,eAAiBpB,EAAWoB,WAAW,cACxDpB,IACA,aAAeA,EAAY,YAAcA,IAOTqB,KAAKH,IAEvCrE,EAMHkD,KAAKK,UACHlB,gBAAiBrC,EACjByE,MAAO,OAPTvB,KAAKK,UACHkB,MAAO,IAAIC,MAAJ,YAAsB3B,EAAtB,gCAA6DI,EAA7D,KACPd,gBAAiB,UAAAjB,IAAA,oBAAAN,MAAA,WAWrBoC,KAAKyB,+DAGmBC,GACxB1B,KAAKyB,WAAWC,EAAUzB,WAAYyB,EAAU7B,SAAU6B,EAAU5B,uCAG7D,IACCX,EAAoBa,KAAKd,MAAzBC,gBAER,GAAIa,KAAKd,MAAMqC,MAEb,OADAI,QAAQC,IAAI,yBAA0B5B,KAAKd,MAAMqC,OACzCvB,KAAKE,MAAM2B,YAAc7B,KAAKE,MAAM2B,WAAW7B,KAAKd,MAAMqC,QAAW,KAG/E,IAAKpC,EACH,OAAO,KAGT,IAAM2C,GACJC,OAAQC,UAAS3D,QACjB4D,MAAOA,WAGHC,EAAalC,KAAKE,MAAMgC,eAE9B,OAAOC,EAAA9D,QAAAsC,cAACyB,EAAA/D,QAADgE,GAAmBC,UAAWnD,EAAiBhC,KAAM6C,KAAKE,MAAMD,WAAY6B,GAAIA,GAAQI,UAhG9EjD,GAgG8EiD,UAhG9EjD,qHCXrB,IAAA5B,EAAAN,EAAAN,EAAA,MAAAgB,EAAAV,EACAN,EAAA,MAEA8F,EAAA9F,EAAA,aAAAM,EAAAgC,GAAA,OAAAA,KAAAhB,WAAAgB,GAAAV,QAAAU,GAAA,IAEMiD,cACJ,SAAAA,kGAAchC,KAAAgC,GAAA,IAAAQ,oKAAAxC,MAAAgC,EAAAvC,WAAAhE,OAAAgH,eAAAT,IAAApG,KAAAoE,MAEV0C,YACAC,aAAc,OAHJ,OAAAH,EAWdI,oBAAsB,SAAAC,GACpBL,EAAKM,KAAKD,EAAM1F,KAAM0F,EAAM/H,KAAM,WAZtB0H,EAedO,oBAAsB,SAAC5F,EAAMrC,EAAMkI,GACjC,GAAa,WAATA,EAAJ,CAKA,IAAMC,EAAS9F,EAAKkE,WAAW,UAAYmB,EAAKU,YAAcV,EAAKW,YACnEF,GAAUA,EAAOH,KAAK,SAAW3F,OAAMrC,WAtB3B0H,EAyBdY,MAAQ,WACN,IAAMC,GACJC,aAAWf,EAAAgB,uBAGb,GAAI7E,OAAO8E,aAAc,CACvB,IAAMC,KAAQlB,EAAAmB,YACRD,GACJhI,OAAOkI,OAAON,GAASI,MAAOA,EAAMA,QAIpCjB,EAAKW,cACPX,EAAKW,YAAYS,IAAI,QAASpB,EAAKqB,eACnCrB,EAAKW,YAAYW,cAGftB,EAAKU,cACPV,EAAKU,YAAYU,IAAI,QAASpB,EAAKqB,eACnCrB,EAAKU,YAAYY,cAGnB,IAAMC,EAAYrF,OAAOsF,SAASC,OAElCzB,EAAKW,eAAce,EAAA7F,SAAG0F,EAAY,UAAYV,UAC9Cb,EAAKW,YAAYgB,GAAG,QAAS3B,EAAKI,qBAElCJ,EAAKU,eAAcgB,EAAA7F,SAAG0F,EAAY,UAAYV,UAC9Cb,EAAKU,YAAYiB,GAAG,QAAS3B,EAAKI,sBA/ClCJ,EAAK4B,MAAM5B,EAAKO,qBAEhBsB,aAAWF,GAAG,YAAa3B,EAAKY,OARpBZ,qUADO8B,aAAjBtC,GA0DNA,EAAS3D,QAAU,IAAI2D,YAERA,sICnEfvF,EAAA,SAAAY,EAAAI,EACAhB,EAAA,eAAAgB,EAAAsB,GAAA,OAAAA,KAAAhB,WAAAgB,GAAAV,QAAAU,GAEawF,WAAW,SAAAC,GACtB,IAAIC,EAAO,EACX,GAAmB,IAAfD,EAAIlJ,OACN,OAAOmJ,EAGT,IAAK,IAAIrJ,EAAI,EAAGA,EAAIoJ,EAAIlJ,OAAQF,IAE9BqJ,GAAQA,GAAQ,GAAKA,EADTD,EAAIE,WAAWtJ,GAE3BqJ,GAAQ,EAEV,OAAOA,GAIIE,kBAAkB,SAAAC,GAC7B,GAAKA,EAIL,GAAgC,iBAArBA,EAAGC,eACZD,EAAGC,eAAiBD,EAAGE,aAAeF,EAAGhH,MAAMtC,OAC/CsJ,EAAGG,aACE,YAAWH,EAAGI,gBAAgC,CACnDJ,EAAGG,QACH,IAAME,EAAQL,EAAGI,kBACjBC,EAAMC,aACND,EAAME,WAIGC,WAAW,eAAC9J,EAAD+J,UAAA/J,OAAA,YAAA+J,UAAA,GAAAA,UAAA,GAAU,GAAV,SAAiBC,EAAAjH,SAAS,mBAAoB/C,2yCClCtE,IAAAiK,EAAA9I,EAAA,IAAAgB,EAAAqB,EACArC,EAAA,KAAA+I,EAAA1G,EACArC,EAAA,KAAAM,EAAA+B,EAEArC,EAAA,eAAAqC,EAAAC,GAAA,OAAAA,KAAAhB,WAAAgB,GAAAV,QAAAU,GAGO,IAAM0G,oBAAeF,EAAAG,cAAa,iBAC5BC,oBAAeJ,EAAAG,cAAa,gBAAiB,SAAAE,GAAA,OAASA,GAAO,kBAASC,UAAW,IAAIC,QAWrFC,GATAC,aAAa,kBAAM,SAAAC,GAC9BA,EAASR,KAETxD,UAAMzE,IAAI,kBAAkB0I,KAAK,SAAAC,GAAc,IAAXrL,EAAWqL,EAAXrL,KAC5B8K,EAAQQ,UAAEC,MAAMvL,EAAM,QAC5BmL,EAASN,EAAaC,QAIbG,sBAAmBR,EAAAG,cAAa,eAChCY,wBAAmBf,EAAAG,cAAa,qBAAsB,SAAAE,GAAA,OAASA,GAAO,kBAASC,UAAW,IAAIC,QA0B9FS,GAxBAC,eAAe,kBAAM,SAACP,EAAUQ,GAC3CR,EAASF,KAET,IAAMH,EAAQQ,UAAEM,OAAOD,IAAWb,MAAMe,aAAaC,IAAI,SAAAC,GAAA,OACvDA,KAAMA,EAAK1J,KACX6G,SAAU6C,EAAK7C,SACf8C,UAAWD,EAAKC,UAChBC,SAAUF,EAAKE,SACfC,MAAOH,EAAKG,MACZC,MAAOJ,EAAKI,MACZC,UAAWL,EAAKK,aAGlBjF,UAAMkF,KAAK,kBAAmBvB,GAAOM,KAAK,WACxCD,EAASK,SAIAc,gBAAa7B,EAAAG,cAAa,qBAC1B2B,gBAAa9B,EAAAG,cAAa,qBAC1B4B,gBAAa/B,EAAAG,cAAa,gBAC1B6B,gBAAahC,EAAAG,cAAa,gBAC1B8B,gBAAajC,EAAAG,cAAa,gBAC1B+B,mBAAgBlC,EAAAG,cAAa,mBAC7Ba,4BAAyBhB,EAAAG,cAAa,4BACtCgC,sBAAoB,kBAAM,SAAAzB,GAAA,OAAY0B,WAAW,kBAAM1B,EAASM,MAA2B,MAa3FqB,GAXAC,oBAAiBtC,EAAAG,cAAa,0BAC9BoC,oBAAiBvC,EAAAG,cAAa,0BAC9BqC,oBAAiBxC,EAAAG,cAAa,qBAC9BsC,oBAAiBzC,EAAAG,cAAa,qBAC9BuC,kBAAe1C,EAAAG,cAAa,mBAC5BwC,mBAAgB3C,EAAAG,cAAa,oBAC7ByC,yBAAsB5C,EAAAG,cAAa,2BACnC0C,0BAAuB7C,EAAAG,cAAa,4BACpC2C,uBAAoB9C,EAAAG,cAAa,8BACjC4C,wBAAqB/C,EAAAG,cAAa,+BAElCkC,0BAAuBrC,EAAAG,cAAa,sBACpC6C,4BAAuBhD,EAAAG,cAAa,qBAepC8C,GAbAC,iBAAiB,kBAAM,SAAAxC,GAClCA,EAAS2B,KACT3B,EAASyB,OAGEgB,iBAAiB,kBAAM,SAAAzC,GAClCA,EAASsC,KACTtC,EAASyB,OAGEiB,sBAAmBpD,EAAAG,cAAa,yBAGhC8C,8BAA2BjD,EAAAG,cAAa,+BAMxCkD,GALAC,yBAAyB,kBAAM,SAAA5C,GAAA,OAC1ChE,UAAMzE,IAAI,2BAA2B0I,KAAK,SAAA4C,GAAc,IAAXhO,EAAWgO,EAAXhO,KAC3CmL,EAASuC,EAAyB1N,QAGzB8N,yBAAsBrD,EAAAG,cAAa,0BAMnCqD,GALAC,oBAAoB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAIlG,EAAPiG,EAAOjG,KAAMmG,EAAbF,EAAaE,MAAOC,EAApBH,EAAoBG,WAApB,OAAqC,SAAAnD,GAAA,OACpEhE,UACGzE,IADH,sBAC+B6L,QAAUC,WAAYJ,EAAIlG,OAAMmG,QAAOC,gBACnElD,KAAK,SAAAqD,GAAA,IAAGzO,EAAHyO,EAAGzO,KAAH,OAAcmL,EAAS2C,EAAoB9N,QAExCiO,+BAA4BxD,EAAAG,cAAa,iCAchD8D,GAbOC,0BAA0B,SAAAC,GAAA,IAAGN,EAAHM,EAAGN,WAAHO,EAAAD,EAAeP,iBAAfQ,EAAuB,EAAvBA,EAAAC,EAAAF,EAA0BJ,sBAA1BM,EAAuC,MAAvCA,EAAA,OAAmD,SAAA3D,GAAA,OACxFhE,UACGzE,IADH,sBAC+B6L,QAAUC,aAAYH,QAAOC,aAAYS,SAAU,YAAa,WAC5F3D,KAAK,SAAA4D,GAAA,IAAGhP,EAAHgP,EAAGhP,KAAH,OAAcmL,EAAS8C,EAA0BjO,WAU3BiP,EAAA1L,SARD,SAAA2L,GAAA,OAC7B/H,UAAMzE,IAAN,8BAAwCwM,EAAIC,KAAK,MAAQ/D,KAAK,SAAAgE,GAAA,OAAAA,EAAGpP,KAC1DqP,OAAO,SAACC,EAAKC,EAAMjP,GAEtB,OADAgP,EAAIJ,EAAI5O,IAAMiP,EACPD,YAUAE,0BAAqB/E,EAAAG,cAAa,6BAUlC6E,GATAC,mBAAmB,SAACtB,GAAD,IAAAuB,EAAApF,UAAA/J,OAAA,YAAA+J,UAAA,GAAAA,UAAA,MAAAqF,EAAAD,EAAOE,iBAAPD,KAAAE,EAAAH,EAAsBI,mBAAtBD,KAAA,OAAiD,SAAC3E,EAAUQ,GAC1F,OAAKyC,IAAQyB,GAASlE,IAAWqE,QAAQC,UAAU7B,GAC1C8B,QAAQC,WAETJ,EAToB,SAAA3B,GAAA,OAAMM,EAAwB0B,IAAIhC,GAAlC,CASYA,GAPb,SAAAA,GAAA,OAAMjH,UAAMzE,IAAN,sBAAgC0L,GAAMhD,KAAK,SAAAiF,GAAA,OAAAA,EAAGrQ,OAApD,CAOwCoO,IAAKhD,KAAK,SAAApL,GAAA,OAC3EmL,EAASqE,EAAmBxP,QAInByP,8BAA2BhF,EAAAG,cAAa,gCAYxC0F,GAXAC,yBAAyB,eAAC/B,EAADjE,UAAA/J,OAAA,YAAA+J,UAAA,GAAAA,UAAA,GAAc,MAAd,OAAwB,SAAAY,GAAA,OAC5DhE,UACGzE,IADH,4BACqC6L,QAAUC,gBAC5CpD,KAAK,SAAApL,GAAA,OAAQmL,EAASsE,EAAyBzP,QAEvCwQ,oBAAoB,SAAAC,GAAA,IAAGjC,EAAHiC,EAAGjC,WAAYkC,EAAfD,EAAeC,SAAUC,EAAzBF,EAAyBE,SAAzB,OAAwC,kBACvExJ,UAAMkF,KAAN,2BAAsCmC,EAAtC,WAA0DmC,GAAY,KAAQD,eAEnEE,qBAAqB,SAAA5Q,GAAA,OAAQ,kBAAMmH,UAAMkF,KAAK,0CAA2CrM,KAGzFsQ,oBAAiB7F,EAAAG,cAAa,oBAc9BiG,GAbAC,eAAe,kBAAM,SAAA3F,GAChChE,UAAMzE,IAAI,gBAAgB0I,KAAK,SAAA2F,GAAc,IAAX/Q,EAAW+Q,EAAX/Q,KAChCmL,EAASmF,EAAetQ,QAKfgR,wBAAqBvG,EAAAG,cAAa,2BAClCqG,sBAAmBxG,EAAAG,cAAa,yBAChCsG,qBAAkBzG,EAAAG,cAAa,wBAC/BuG,uBAAoB1G,EAAAG,cAAa,0BAGjCiG,kBAAepG,EAAAG,cAAa,kBAiB5BwG,GAhBAC,YAAY,SAAAC,GAAA,OAAe,SAAAnG,GACjCmG,EASLnK,UAAMzE,IAAI,mBAAmB0I,KAAK,SAAAmG,GAChCpG,EAAS0F,EAAaU,EAAIvR,SAT1BmL,EACE0F,GACEzC,GAAI,YACJoD,MAAO,UAWFJ,qBAAkB3G,EAAAG,cAAa,sBAQ/B6G,GAPAC,sBAAsB,kBAAM,SAAAvG,GACvChE,UAAMzE,IAAI,wBAAwB0I,KAAK,SAAAuG,GACrCxG,EAASiG,EAAgBO,EAAY3R,WAK5ByR,qBAAkBhH,EAAAG,cAAa,qBAQ/BgH,GAPAC,eAAe,kBAAM,SAAA1G,GAChChE,UAAMzE,IAAI,gBAAgB0I,KAAK,SAAAmG,GAC7BpG,EAASsG,EAAgBF,EAAIvR,WAKpB4R,8BAA2BnH,EAAAG,cAAa,+BACxCkH,gCAA2BrH,EAAAG,cAAa,8BAsBxCmH,GArBAC,qBAAqB,kBAAM,SAAA7G,GACtChE,UAAMzE,IAAI,4BAA4B0I,KAAK,SAAAmG,GACzCpG,EAASyG,EAAyBL,EAAIvR,WAI7BiS,uBAAuB,SAAAC,GAAA,OAAoB,SAAA/G,GACtDA,EAASyG,EAAyBM,MAGvBC,mBAAmB,SAAAC,GAAA,OAAiB,SAAAjH,GAC/CA,EAAS2G,EAAyBM,MAIvBC,mBAAgB5H,EAAAG,cAAa,gBAC7B0H,oBAAiB7H,EAAAG,cAAa,uBAC9B2H,oBAAiB9H,EAAAG,cAAa,iBAC9B4H,wBAAqB/H,EAAAG,cAAa,sBAClC6H,iBAAchI,EAAAG,cAAa,iBAE3BmH,eAAYtH,EAAAG,cAAa,gBACzB8H,mBAAmB,SAAAC,GAAA,OAAU,SAACxH,EAAUQ,GACnD,IAAMvH,EAAQuH,IACRiH,EAAOtH,UAAE9E,KAAKpC,EAAM0G,MAAMe,YAAYzH,EAAM0G,MAAM+H,aAAa1G,OAASiC,GAAIuE,IAC5E5G,EAAO6G,GAAQxO,EAAM0G,MAAMe,YAAY+G,EAAK7G,MAElDA,GACEZ,EACE4G,GACEe,QAAS,SAAWF,EAAKG,MACzBC,SAAUJ,EAAK7G,KACf4G,OAAQA,EACR3S,KAAM+L,EAAKK,kTCpNnB6G,EAAAtR,EAAA,IAAA+I,EAAApK,EACAqB,EAAA,MACYuR,0JAAZvR,EAAA,KAAAqC,EAAA1D,EACAqB,EAAA,cAAArB,EAAA2D,GAAA,OAAAA,KAAAhB,WAAAgB,GAAAV,QAAAU,GAEA,IAKMkP,GAJc,YAAlB,oBAAOvP,OAAP,YAAAwP,EAAOxP,UAAuBA,OAAOyP,qCACjCzP,OAAOyP,sCAAuChR,KAAM,WAAYiR,eAAgBJ,IAChFK,cAE4BN,EAAAO,iBAAgBC,yBAEnCR,EAAAS,aAAYC,UAAUR,+GCZrC,IAAA5Q,EAAAmI,GAAAnI,EAAAZ,EAAA,MAAAY,EAAAU,WAAAV,GAAAgB,QAAAhB,GAEaqR,kBAAkB,eAAC7S,EAADwJ,UAAA/J,OAAA,YAAA+J,UAAA,GAAAA,UAAA,MAAesJ,EAAftJ,UAAA/J,OAAA,YAAA+J,UAAA,GAAAA,UAAA,GAA0B,UAA1B,OAC7Be,UAAEwI,SACC/S,OAAegT,OAAOC,SAASlI,IAAI,SAAA9J,GAAA,OAClCsJ,UAAEyI,OAAO/R,EAAOiS,aAAiBJ,aAAY/H,IAAI,SAAAoI,GAAA,OAC/C/O,WAAYnD,EAAOK,KACnB0C,SAAUmP,EAAOC,yVCPzBC,EAAAzS,EAAA,GAAA+I,EAAAvI,EAAAQ,GAAAV,EAAAE,EACAR,EAAA,IAAAqC,EAAA7B,EACAR,EAAA,KAAArB,EAAA6B,EACAR,EAAA,eAAAQ,EAAA8B,GAAA,OAAAA,KAAAhB,WAAAgB,GAAAV,QAAAU,GAAA,SAAArC,EAAAqC,EAAAlB,GAAA,IAAAkB,EAAA,UAAAC,eAAA,oEAAAnB,GAAA,iBAAAA,GAAA,mBAAAA,EAAAkB,EAAAlB,EAAA,IAEqBsR,6SAKnBC,4BAA2BC,EAAAhR,qVALkBsB,6DAQ3CK,KAAKsP,6DAILtP,KAAKsP,gEAIL,IACEC,UAASC,uBAAuBD,UAASE,YAAYzP,OACrD,MAAO0P,GACP/N,QAAQJ,MAAMmO,qCAKhB,OAAOvN,EAAA9D,QAAAsC,cAAA,OAAKgP,UAAU,uBAAAzR,IAAA,iBAAAN,MAAA,WAMtB,IAAM8P,EAAO6B,UAASE,YAAYzP,MAElC,IACE,IAAME,EAAQzE,OAAOkI,UAAW3D,KAAKE,cAC9BA,EAAAoC,UACPiN,UAASK,OAAOlQ,UAAMiB,cAAcX,KAAKE,MAAMoC,UAAWpC,GAAQwN,GAClE,MAAOgC,GACP,IAAMG,EACJ1N,EAAA9D,QAAAsC,cAAA,OAAKgP,UAAU,sBACbxN,EAAA9D,QAAAsC,cAAA,OAAKgP,UAAU,iBAAf,+BACAxN,EAAA9D,QAAAsC,cAAA,OAAKgP,UAAU,cACbxN,EAAA9D,QAAAsC,cAAA,2DACAwB,EAAA9D,QAAAsC,cAAA,SAAI+O,EAAII,UAGV3N,EAAA9D,QAAAsC,cAAA,OAAKgP,UAAU,gBAAf,cACaxN,EAAA9D,QAAAsC,cAAA,KAAGoP,KAAK,yDAAR,cADb,iCAOJR,UAASK,OAAOC,EAASnC,GACzB/L,QAAQJ,OAASI,QAAQJ,MAAM,0BAA2BmO,UArD3CP,KACZa,WACL1N,UAAW2N,UAAUC,KAAKC,sBAFThB,2FCLrB,IAAA1R,EAAA8H,EAAA9I,EAAA,IACA2T,EAAA3T,EAAA,KACArB,GAAAqC,EAAAhB,EAAA,MAAAgB,EAAAM,WAAAN,GAAAY,QAAAZ,GAEA4S,EAAA5T,EAAA,aAAAC,EAAAqC,EAAAlB,EAAAO,GAAA,OAAAP,KAAAkB,EAAAtD,OAAA6B,eAAAyB,EAAAlB,GAAAD,MAAAQ,EAAAb,YAAA,EAAAgC,cAAA,EAAAD,UAAA,IAAAP,EAAAlB,GAAAO,EAAAW,EAAA,SAAA7B,EAAA6B,GAAA,GAAAuR,MAAAC,QAAAxR,GAAA,SAAAlB,EAAA,EAAAO,EAAAkS,MAAAvR,EAAAzD,QAAAuC,EAAAkB,EAAAzD,OAAAuC,IAAAO,EAAAP,GAAAkB,EAAAlB,GAAA,OAAAO,EAAA,OAAAkS,MAAAtN,KAAAjE,GAEA,IACMyR,EAAQ,IAAIC,QAAOzP,KAAM,6BAEzB0P,KAAUnL,EAAAoL,gBAAAC,EAAAC,KAEXnE,2BAA2B,SAACxN,EAADiH,GAAA,IAAU2K,EAAV3K,EAAU2K,QAAV,SAAAC,OAAAC,EAA4BF,MAF5CF,EAAAC,EAGXjE,2BAA2B,SAAC1N,EAAD4J,GAAwB,IAAdgI,EAAchI,EAAdgI,QAKpC,OAJI1K,UAAE6K,KAAKH,GAAWN,YACpBA,EAAMU,UAGRH,OAAAC,EAAW9R,EAAMiS,QAANlV,MAAAiD,EAAA8R,EAAiBF,QARlBD,iBAcDH,mQCvBfnL,EAAA9I,EAAA,IAEA4T,EAAA5T,EAAA,aAAAqC,EAAAC,EAAAlB,EAAAO,GAAA,OAAAP,KAAAkB,EAAAtD,OAAA6B,eAAAyB,EAAAlB,GAAAD,MAAAQ,EAAAb,YAAA,EAAAgC,cAAA,EAAAD,UAAA,IAAAP,EAAAlB,GAAAO,EAAAW,EAEA,IAYM2R,KAAUnL,EAAAoL,gBAAAC,EAAAC,KAEXtE,kBAAkB,SAACrN,EAADiH,GAAA,IAAU2K,EAAV3K,EAAU2K,QAAV,OAAAzO,KACdnD,GACHkS,UAAWN,EAAQjC,OAAO,SAAA/R,GAAA,OAAUA,EAAOK,KAAKkE,WAAW,YAAWuF,IAAI,SAAA9J,GAAA,OACxEoM,GAAIpM,EAAOK,KACXA,KAAML,EAAOuU,SACbC,KAAMxU,EAAOyU,gBAPLX,EAAAC,EAWX1D,gBAAgB,SAACjO,EAAD4J,GAAA,IAAUgI,EAAVhI,EAAUgI,QAAV,OAAAzO,KACZnD,GACHsS,aACKtS,EAAMsS,SACTC,UACAC,OAAQ,MACR5W,QACA8S,QAASkD,QAlBDF,EAAAC,EAsBXzD,iBAAiB,SAAAlO,GAAA,OAAAmD,KACbnD,GACHsS,aACKtS,EAAMsS,SACTC,gBA1BQb,EAAAC,EA8BXxD,iBAAiB,SAACnO,EAAD+J,GAAA,IAAU6H,EAAV7H,EAAU6H,QAAV,OAAAzO,KACbnD,GACHsS,aACKtS,EAAMsS,SACTC,UACA3W,KAAMgW,EAAQhW,KACd8S,QAASkD,EAAQlD,cApCTgD,EAAAC,EAwCXhE,YAAY,SAAC3N,EAADqK,GAAA,IAAUuH,EAAVvH,EAAUuH,QAAV,OAAAzO,KACRnD,GACHsS,aACKtS,EAAMsS,SACTC,UACAC,OAAQ,OACR9D,QAASkD,EAAQlD,QACjB9S,KAAMgW,EAAQhW,KACd6W,aAAcb,EAAQhD,SACtB8D,WAAYd,EAAQrD,aAjDZmD,EAAAC,EAqDXtD,cAAc,SAAArO,GAAA,OAAAmD,KACVnD,GACHsS,aACKtS,EAAMsS,SACTC,gBAzDQZ,IAXdO,aACAI,SACEC,UACA3W,QACA8S,QAAS,KACT8D,OAAQ,KACRC,aAAc,KACdC,WAAY,QAAA/T,EAAAQ,QAoEDqS,qFChFf,IAIAlL,EAAAzI,EAAA+B,EAJAyG,EAAA9I,EAAA,IAEA4T,EAAA5T,EAAA,IAIMiU,KAAUnL,EAAAoL,qBAEXpE,EAAkB,SAACrN,EAADiH,GAAA,IAAU2K,EAAV3K,EAAU2K,QAAV,SAAAC,8HAA4BD,MAFnCH,EAEXpE,qBAA8CuE,yGAKpCJ,yFCTf3T,EAAA+B,EAAA1D,EDSesV,oKCbfnL,EAAA9I,EAAA,IAEA4T,EAAA5T,EAAA,IAIMiU,KAAUnL,EAAAoL,qBAEXzE,EAAkB,SAAChN,EAADiH,GAAA,IAAU2K,EAAV3K,EAAU2K,QAAV,OAAAzO,KAA8ByO,KAFrCH,EAEXzE,qBAAgD4E,yGAKtCJ,yFCTf3T,EAAA+B,EAAA1D,EDSesV,oKCbfnL,EAAA9I,EAAA,IAEA4T,EAAA5T,EAAA,IAIMiU,KAAUnL,EAAAoL,qBAEXhF,EAAe,SAACzM,EAADiH,GAAA,IAAU2K,EAAV3K,EAAU2K,QAAV,OAAAzO,KAA8BnD,EAAU4R,KAF5CH,EAEXhF,kBAAuDmF,yGAK7CJ,mQCbfnL,EAAA9I,EAAA,IAEA4T,EAAA5T,EAAA,aAAAqC,EAAAC,EAAAlB,EAAAO,GAAA,OAAAP,KAAAkB,EAAAtD,OAAA6B,eAAAyB,EAAAlB,GAAAD,MAAAQ,EAAAb,YAAA,EAAAgC,cAAA,EAAAD,UAAA,IAAAP,EAAAlB,GAAAO,EAAAW,EAEA,IAOM2R,KAAUnL,EAAAoL,gBAAAC,EAAAC,KAEX/E,qBAAqB,SAAA5M,GAAA,OAAAmD,KACjBnD,GACH2S,oBAAqB3S,EAAM2S,uBAJjBjB,EAAAC,EAMX9E,mBAAmB,SAAA7M,GAAA,OAAAmD,KACfnD,GACH4S,kBAAmB5S,EAAM4S,qBARflB,EAAAC,EAUX7E,kBAAkB,SAAC9M,EAADiH,GAAA,IAAU2K,EAAV3K,EAAU2K,QAAV,OAAAzO,KACdnD,GACH6S,SAAUjB,EAAQkB,eAZRpB,EAAAC,EAcX5E,oBAAoB,SAAC/M,EAAD4J,GAAA,IAAUgI,EAAVhI,EAAUgI,QAAV,OAAAzO,KAChBnD,GACH+S,YAAaxW,OAAOkI,UAAWzE,EAAM+S,YAAanB,OAhBxCD,IANdgB,sBACAC,oBACAC,UAAW,EACXE,2BAyBavB,yFC7Bf3T,EAAA+B,EAAA1D,ED6BesV,oKCjCfnL,EAAA9I,EAAA,IAEA4T,EAAA5T,EAAA,IASMiU,KAAUnL,EAAAoL,qBAEXvF,EAAiB,SAAClM,EAADiH,GAAwB,IAAd2K,EAAc3K,EAAd2K,QAC1B,OAAAzO,KAAYnD,EAAU4R,KAHZH,EAEXvF,oBACuB0F,4FAT1B3T,KAAM,KACN+U,KAAM,KACNC,SAAU,KACVC,OAAQ,OAAAvU,EAAAQ,QAYKqS,yQCpBfnL,EAAA9I,EAAA,IAAAQ,EAAAuB,EACA/B,EAAA,MAAAC,EAAA8B,EACA/B,EAAA,KAEA4V,EAAA5V,EAAA,KAEA4T,EAAA5T,EAAA,aAAA+B,EAAAO,GAAA,OAAAA,KAAAhB,WAAAgB,GAAAV,QAAAU,GAAA,SAAAuT,EAAAvT,EAAAlB,EAAAO,GAAA,OAAAP,KAAAkB,EAAAtD,OAAA6B,eAAAyB,EAAAlB,GAAAD,MAAAQ,EAAAb,YAAA,EAAAgC,cAAA,EAAAD,UAAA,IAAAP,EAAAlB,GAAAO,EAAAW,EAAA,SAAA/B,EAAA+B,GAAA,GAAAuR,MAAAC,QAAAxR,GAAA,SAAAlB,EAAA,EAAAO,EAAAkS,MAAAvR,EAAAzD,QAAAuC,EAAAkB,EAAAzD,OAAAuC,IAAAO,EAAAP,GAAAkB,EAAAlB,GAAA,OAAAO,EAAA,OAAAkS,MAAAtN,KAAAjE,GA8BA,IAGMwT,GACJ5L,eACA6L,iBACA7E,YAAa,KACb8E,gBAAiB,KACjBC,qBACAC,qBAAsB,KACtBC,gBAAiB,KACjBC,aACAC,aACAC,aAAc,KACdC,QAAUtB,OAAQ,KAAMuB,WAAY,OAQhCC,EAAmB,SAAAhU,GACvB,IAAMiU,EAAa,SAAC1O,EAAMiN,GAcxB,OAbItL,UAAEmK,QAAQmB,GACZA,EAAO0B,QAAQ,SAAAnW,GACTmJ,UAAEiN,SAASpW,GACbwH,GAAQxH,GAERwH,GAAQxH,EAAEyQ,KACVjJ,GAAQxH,EAAEqW,aAId7O,GAAQ,OAGHA,GAGT,OAAO2B,UAAEM,OAAOxH,EAAMyH,aAAawD,OAAO,SAACoJ,EAAKC,GAC9C,IAAKA,EACH,OAAOD,EAGT,IAAIE,EAAO,GAiCX,OAhCAA,GAAQD,EAAKrW,KACbsW,GAAQD,EAAK1M,UAET0M,EAAKzM,WACP0M,EAAON,EAAWM,EAAMD,EAAKzM,SAAS2M,WACtCD,EAAON,EAAWM,EAAMD,EAAKzM,SAAS4M,SACtCF,EAAON,EAAWM,EAAMD,EAAKzM,SAAS6M,OAGxCxN,UAAEyD,QAAQ2J,EAAKvM,MAAO,MAAMmM,QAAQ,SAAA1F,GAClC+F,EAAON,EAAWM,EAAM/F,EAAKgG,WAC7BD,EAAON,EAAWM,EAAM/F,EAAKiG,SAC7BF,EAAON,EAAWM,EAAM/F,EAAKkG,MAC7BH,GAAQ/F,EAAKxE,GACbuK,GAAQ/F,EAAK7G,KACb4M,GAAQ/F,EAAK9M,KACb6S,GAAQ/F,EAAKvQ,KACbsW,GAAQ/F,EAAKmG,EACbJ,GAAQ/F,EAAKoG,IAGf1N,UAAEyD,QAAQ2J,EAAKxM,MAAO,SAAAjK,GAAA,OAAKA,EAAEgX,OAAShX,EAAEiX,SAAQZ,QAAQ,SAAAa,GACtDR,GAAQQ,EAAKF,OACbN,GAAQQ,EAAKD,OACbC,EAAKC,QACHD,EAAKC,OAAOd,QAAQ,SAAA5U,GAClBiV,GAAQjV,EAAEqV,EACVJ,GAAQjV,EAAEsV,MAIhBP,EAAIC,EAAKrW,SAAQkV,EAAA9N,UAASkP,GACnBF,QAILY,EAAoB,SAAAjV,GAAA,OAAAmD,KAAenD,GAAOkV,cAAelB,EAAiBhU,MAE1EmV,EAAiB,SAAAnV,GAAA,OAAAmD,KAClB+D,UAAEkO,KAAKpV,GAAQ,cAAe,kBAAmB,iBACpDqV,UAAW,IAAIzO,QAGX0O,EAAgB,SAAAtV,GACpB,OAAKA,EAAM0T,iBAAmB,IAAI9M,KAAS5G,EAAM0T,gBAAgB2B,UAzF/B,IA0FhClS,KAAYnD,GAAO0T,gBAAiByB,EAAenV,KAErDmD,KACKnD,GACH2T,WAAY3T,EAAM0T,iBAAlB7B,OAAAC,EAAsC9R,EAAM2T,UAAUhU,MAAM,EA/FpC,MAgGxBiU,aACAF,gBAAiByB,EAAenV,MAI9BuV,EAAa,SAAAC,GAAA,OAAa,SAAAxV,GAAS,IAAAyV,EACjCC,EAA8B,cAAdF,EAA4B,YAAc,YAChE,GAAgC,IAA5BxV,EAAMwV,GAAWpZ,OACnB,OAAO4D,EAET,IAAM0T,EAAkB1T,EAAMwV,GAAW,GACzC,OAAArS,KACKnD,GADL0R,EAAA+D,GAEE/B,kBACAjF,YAAaiF,EAAgBjF,YAC7B8E,gBAAiBG,EAAgBH,gBACjC9L,YAAaiM,EAAgBjM,aAC5B+N,EAAYxV,EAAMwV,GAAW7V,MAAM,IANtC+R,EAAA+D,EAOGC,GAAiB1V,EAAM0T,iBAP1B7B,OAAAC,EAO8C9R,EAAM0V,MAPpDD,MAsEEjE,KAAUnL,EAAAoL,gBAAAC,EAAAC,KAETpL,eAAe,SAAAvG,GAAA,OAAAmD,KACXnD,GACHsT,qBAJQ5B,EAAAC,EAOTlL,eAAe,SAACzG,EAAD4J,GAAwB,IAAdgI,EAAchI,EAAdgI,QAClBlL,EAAQQ,UAAEyO,KAAK/D,GAASjC,OAAO,SAAA3Q,GAAA,OAAQ4S,EAAQ5S,GAAKgJ,YACpD4N,EAAc1O,UAAEyO,KAAK/D,GAASiE,SAAS,kBAAoB,iBAAmB3O,UAAE4O,MAAMpP,GACtFqP,OACD/V,GACHsT,iBACA7L,YAAamK,EACbnD,YAAazO,EAAMyO,aAAemH,IAEpC,OAAAzS,KACK4S,GACHrC,gBAAiByB,EAAeY,OAlB1BrE,EAAAC,EAsBT9K,mBAAmB,SAAA7G,GAAA,OAAAmD,KACfnD,GACHgW,mBAxBQtE,EAAAC,EA2BTvK,mBAAmB,SAAApH,GAAA,OAAAmD,KACfnD,GACHgW,mBA7BQtE,EAAAC,EAgCT/I,iBAAiB,SAAC5I,EAAD+J,GAAA,IAAU6H,EAAV7H,EAAU6H,QAAV,OAAAzO,KACbnD,GACHuT,gBAAiB3B,MAlCTF,EAAAC,EAqCTxI,oBAAoB,SAAAnJ,GAAA,OAAAmD,KAChBnD,GACHwT,yBAvCQ9B,EAAAC,EA0CTvI,qBAAqB,SAAApJ,GAAA,OAAAmD,KACjBnD,GACHwT,yBA5CQ9B,EAAAC,EA+CTtJ,aAAa,SAACrI,EAADqK,GAAwB,IAAduH,EAAcvH,EAAduH,QACtB,OAAI5R,EAAMyO,cAAgBmD,EACjB5R,EAGTmD,KACKnD,GACHuT,gBAAiB,KACjB9E,YAAamD,MAvDPF,EAAAC,EA2DTlI,mBAAmB,SAACzJ,EAADwK,GAAA,IAAUoH,EAAVpH,EAAUoH,QAAV,OAAAzO,KACfnD,GACHyT,qBAAsB7B,MA7DdF,EAAAC,EAgETtK,yBAAyB,SAAArH,GAAA,OAAAmD,KACrBnD,GACHyH,iBACKzH,EAAMyH,YADXiK,KAEG1R,EAAMyO,YAFTtL,KAGOnD,EAAMyH,YAAYzH,EAAMyO,cAC3B1G,MAAO/H,EAAMyH,YAAYzH,EAAMyO,aAAa1G,MAAML,IAAI,SAAA8G,GAAA,OAAArL,KAAcqL,GAAMyH,aAAc,IAAIrP,iBAtExF+K,GA2EZ0B,GAGF7B,KAAU0E,EAAA/W,SACRqS,KACAnL,EAAAoL,gBAAAC,EAAAyE,KAEKhO,aAAa,SAACnI,EAAD4K,GAAA,IA5HC3D,EAAGU,EAAM1J,EA4HA2T,EAAVhH,EAAUgH,QAAV,OAAAzO,KACTnD,GACHyH,aA9HaR,GA+HXU,KAAM3H,EAAMyO,YACZxQ,KAAM2T,EACNlL,MAAOQ,UAAEM,OAAOxH,EAAMyH,cAjIRE,EAAHV,EAAGU,KAAM1J,EAATgJ,EAAShJ,KAATgJ,EAAeP,MAC5BuE,OAAO,SAACoJ,EAAK+B,GAMjB,GALIA,EAAEnY,OAAS0J,IACbyO,EAAEnY,KAAOA,EACTmY,EAAEtR,SAAW7G,GAGXmY,EAAErO,MAAO,CACX,IAAIsO,EAAOC,KAAKC,UAAUH,EAAErO,OAC5BsO,EAAOA,EAAKxU,QAAQ8F,EAAM1J,GAC1BmY,EAAErO,MAAQuO,KAAKE,MAAMH,GAKvB,OAFAhC,EAAI+B,EAAEnY,MAAQmY,EAEP/B,QAoHH5F,YAAamD,MATnBF,EAAAyE,EAYKjO,aAAa,SAAClI,EAADgL,GAAwB,IAAd4G,EAAc5G,EAAd4G,QAChBnD,EAAczO,EAAMyH,YAAYzH,EAAMyO,aACtC1G,EAAS6J,EAAQ9J,MAEnB2G,EAAY1G,MAAML,IAAI,SAAA8G,GACpB,IAAMiI,EAAY7E,EAAQ9J,MAAM6H,OAAO,SAAAoF,GAAA,OAAQA,EAAKF,SAAWrG,EAAKxE,KAC9D0K,EAAOlG,EAAKkG,KAAKhN,IAAI,SAAChJ,EAAOgY,GACjC,IAAM3B,EAAO0B,EAAUrU,KAAK,SAAA2S,GAAA,OAAQ4B,OAAO5B,EAAK6B,WAAW/U,QAAQ,MAAO,OAAS6U,IAC7EG,EAAa3P,UAAE9E,KAAKqM,EAAY1G,OAASiC,IAAK+K,OAAYD,SAC5DgC,EAAY,GAMhB,OAJIpY,EAAM8P,KAAKqH,SAAS,eAAgC,QAAfnX,EAAM8P,MAAkB9P,EAAM8P,KAAKrM,WAAW,QACrF2U,EAAYpY,EAAM8P,MAGpBrL,KAAYzE,GAAO8P,KAAOqI,GAAcA,EAAW5Y,MAAS6Y,MAG9D,OAAA3T,KAAYqL,GAAMkG,OAAMuB,aAAc,IAAIrP,SAf5C6H,EAAY1G,MAkBVD,GAAS8J,EAAQ9J,OAAS2G,EAAY3G,OAAOJ,IAAI,SAAAqN,GAAA,OAAA5R,KAClD4R,GACHC,OAAQD,EAAKC,OAAOtN,IAAI,SAAAuE,GAAA,IAAG0I,EAAH1I,EAAG0I,EAAGC,EAAN3I,EAAM2I,EAAN,OAAiBD,EAAGoC,KAAKC,MAAMrC,GAAIC,EAAGmC,KAAKC,MAAMpC,UAG3E,OAAAzR,KACKnD,GACHyH,iBACKzH,EAAMyH,YADXiK,KAEG1R,EAAMyO,YAFTtL,KAE4BsL,GAAa1G,SAAU6J,GAAS9J,gBA1CpE4J,EAAAyE,EA+CK/N,aAAa,SAACpI,EAADuL,GAAA,IAAmBtN,EAAnBsN,EAAUqG,QAAV,OAAAzO,KACTnD,GACHyH,iBACKzH,EAAMyH,YADXiK,KAEGzT,GA1JTgZ,QAAS,MACThZ,KAyJgCA,EAxJhC6G,SAwJgC7G,EAvJhC2J,UAAW,QACXC,YACAC,SACAC,QAEIiC,MAAImJ,EAAAjN,YACJjI,KAAM,QACNwW,WACAD,UAAW,KACXE,QACAC,EAAG,IACHC,EAAG,SA8IDnG,YAAaxQ,EACbsV,gBAAiB,SAtDvB7B,EAAAyE,EAyDK7N,aAAa,SAACtI,EAADqM,GAAA,IAAmBpO,EAAnBoO,EAAUuF,QAAV,OAAAzO,KACTnD,GACHyO,YAAazO,EAAMyO,cAAgBxQ,EAAO,KAAO+B,EAAMyO,YACvD8E,gBAAiBvT,EAAMyO,cAAgBxQ,EAAO,KAAO+B,EAAMuT,gBAC3D9L,YAAaP,UAAEgQ,KAAKlX,EAAMyH,YAAaxJ,OA7D7CyT,EAAAyE,EAoEKhI,iBAAiB,SAACnO,EAAD2M,GAAwB,IAAdiF,EAAcjF,EAAdiF,QACpBlD,EAAUkD,EAAQlD,QACrB7M,QAAQ,oBAAqB,IAC7BA,QAAQ,sBAAuB,IAC/BA,QAAQ,WAAY,IACjBsV,KAAehE,EAAAjN,UAAS,GACxB0I,YAAqBF,EAArB,IAAgCyI,EAAhC,aAEAC,EAAU7a,OAAOkI,UAAWmN,EAAQyF,eACxCrP,UAAW4J,EAAQhW,KACnBqC,KAAM2Q,EACN9J,SAAU8J,IAGN0I,GACJtN,GAAI,SAAWmN,EACfzV,KAAM,aACNiN,MAAOD,EACPzQ,KAASyQ,EAAT,IAAoByI,EACpBxP,KAAMiH,EACN8F,KAAM9C,EAAQ2F,gBACd9C,QAAS,KACTD,UAAW,MAGb,OAAArR,KACKnD,GACHyT,qBAAsB,eACtBI,aAAcyD,EACd7P,iBACKzH,EAAMyH,YADXiK,KAEG0F,EAAQnZ,KAAOmZ,QAnG1B1F,EAAAyE,EAwGK9H,cAAc,SAACrO,EAADwX,GAAwB,IAAAC,EAAd7F,EAAc4F,EAAd5F,QACjB8F,EAAenb,OAAOkI,UAAWzE,EAAMyH,YAAYmK,EAAQa,cAAeb,EAAQyF,eACtFrP,UAAW4J,EAAQhW,KACnBqC,KAAM2T,EAAQa,aACd3N,SAAU8M,EAAQa,eAGd1K,EAAQ/H,EAAMyH,YAAYzH,EAAMyO,aAAa1G,MAAML,IAAI,SAAA8G,GAC3D,OAAIA,EAAKxE,KAAO4H,EAAQc,WACflE,EAGFjS,OAAOkI,UAAW+J,GACvBkG,KAAM9C,EAAQ2F,gBAIlB,OAAApU,KACKnD,GACHyH,iBACKzH,EAAMyH,aADXgQ,KAAA/F,EAAA+F,EAEG7F,EAAQa,aAAeiF,GAF1BhG,EAAA+F,EAGGzX,EAAMyO,YAHTtL,KAIOnD,EAAMyH,YAAYzH,EAAMyO,cAC3B1G,MAAOA,KALX0P,QA3HR/F,EAAAyE,EAsIK/H,qBAAqB,SAACpO,EAAD2X,GAAA,IAAU/F,EAAV+F,EAAU/F,QAAV,OAAAzO,KACjBnD,GACHyH,iBACKzH,EAAMyH,YADXiK,KAEG1R,EAAMyO,YAFTtL,KAGOnD,EAAMyH,YAAYzH,EAAMyO,cAC3B1G,kBACK/H,EAAMyH,YAAYzH,EAAMyO,aAAa1G,QACxCb,UAAE0Q,MAAM5X,EAAM6T,aAAc3M,UAAEkO,KAAKxD,GAAU,IAAK,iBA9I9DF,EAAAyE,EAoJK5N,gBAAgB,SAACvI,EAAD6X,GAAuD,IAAAC,EAAAD,EAA7CjG,QAAWmG,EAAkCD,EAAlCC,oBAAqB9Z,EAAa6Z,EAAb7Z,KACzD,OAAAkF,KACKnD,GACHyH,iBACKzH,EAAMyH,YADXiK,KAEGzT,EAFHkF,KAGOnD,EAAMyH,YAAYsQ,IACrB9Z,OACA6G,SAAU7G,EACV8J,MAAO/H,EAAMyH,YAAYsQ,GAAqBhQ,MAAML,IAAI,SAAA8G,GAAA,OAAArL,KACnDqL,GACHxE,MAAImJ,EAAAjN,oBAIVuI,YAAaxQ,EACbsV,gBAAiB,SApKzB7B,EAAAyE,EAwKKxN,iBAAiB,SAAC3I,EAADgY,GAAwB,IAAdpG,EAAcoG,EAAdpG,QACpBnD,EAAczO,EAAMyH,YAAYzH,EAAMyO,aACtCwJ,EAAc/Q,UAAE9E,KAAKpC,EAAMyH,YAAYzH,EAAMyO,aAAa1G,OAASiC,GAAIhK,EAAMuT,kBAC7E2E,EAAc,SAAAja,GAAA,OAAQA,KAAUga,OAAmBha,MAAQ2T,EAAQ3T,MACzE,OAAAkF,KACKnD,GACHyH,iBACKzH,EAAMyH,YADXiK,KAEG1R,EAAMyO,YAFTtL,KAGOsL,GACH7G,UAAWsQ,EAAYzJ,EAAY7G,WAAagK,EAAQ3T,KAAOwQ,EAAY7G,UAC3EG,MAAO0G,EAAY1G,MAAML,IAAI,SAAA8G,GAC3B,OAAIA,EAAKxE,KAAOhK,EAAMuT,gBACpBpQ,KACKqL,GACHkG,KAAMlG,EAAKkG,KAAKhN,IAAI,SAAAqM,GAAA,OAAA5Q,KACf4Q,GACHvF,KAAM0J,EAAYnE,EAAWvF,MAAQoD,EAAQ3T,KAAO8V,EAAWvF,WAKrErL,KAAYqL,EAASoD,GAASqE,aAAc,IAAIrP,iBA9L9D8K,EAAAyE,EAqMKrN,iBAAiB,SAAC9I,EAADmY,GAAwB,IAAdvG,EAAcuG,EAAdvG,QACpBwG,KACAC,EAAenR,UAAE9E,KAAKpC,EAAMyH,YAAYzH,EAAMyO,aAAa1G,OAASiC,GAAI4H,IAS9E,MAP0B,eAAtByG,EAAa3W,MAzbU,SAAC1B,EAAO4O,GAAR,OACjC1H,UAAEwI,QAAQxI,UAAEM,OAAOxH,EAAMyH,aAAaC,IAAI,SAAAC,GAAA,OAAQA,EAAKI,SACpD4H,OAAO,SAAAnB,GAAA,OAAQA,EAAK7G,OAASiH,GAAY1H,UAAE9E,KAAKoM,EAAKkG,MAAQlG,KAAMI,MACnElH,IAAI,SAAA8G,GAAA,OAAQA,EAAKxE,KAHa,CA0bMhK,EAAOqY,EAAa1Q,MAAMvL,QAAU,GAEjEgc,EAAc9b,KAAK+b,EAAa1Q,MAIpCxE,KACKnD,GACHyH,iBACKP,UAAEgQ,KAAKlX,EAAMyH,YAAa2Q,GAD/B1G,KAEG1R,EAAMyO,YAFTtL,KAGOnD,EAAMyH,YAAYzH,EAAMyO,cAC3B1G,MAAO/H,EAAMyH,YAAYzH,EAAMyO,aAAa1G,MAAM4H,OAAO,SAAAnB,GAAA,OAAQA,EAAKxE,KAAO4H,YAtNzFF,EAAAyE,EA4NKpN,eAAe,SAAA/I,GACd,IAAMwO,EAAOtH,UAAE9E,KAAKpC,EAAMyH,YAAYzH,EAAMyO,aAAa1G,OAASiC,GAAIhK,EAAMuT,kBAC5E,OAAK/E,EAGLrL,KACKnD,GACH6T,kBAAmBrF,GAAMkG,KAAMlG,EAAKkG,KAAKhN,IAAI,SAAAyD,GAAA,OAAAhI,KAAcgI,GAAMqD,KAAM,WAJhExO,IA/Nf0R,EAAAyE,EAuOKnN,gBAAgB,SAAChJ,EAADsY,GAAkC,IAAAC,EAAAD,EAAxB1G,QAAW+C,EAAa4D,EAAb5D,EAAGC,EAAU2D,EAAV3D,EACjCnG,EAAczO,EAAMyH,YAAYzH,EAAMyO,aACtC+J,KAAYrF,EAAAjN,YACZjI,EArXG,SAACwa,EAAcC,GAC9B,IAAMC,EAASF,EAAa9I,OAAO,SAAA1R,GAAA,OAAQA,EAAKkE,WAAcuW,EAAnB,WAE3C,IAAKC,EAAOvc,OACV,OAAUsc,EAAV,QAIF,IADA,IAAIxc,EAAI,IACK,CACX,IAAKyc,EAAOvW,KAAK,SAAAnE,GAAA,OAAQA,IAAYya,EAAZ,SAA+Bxc,IACtD,OAAUwc,EAAV,SAA6Bxc,EAE7BA,GAAK,GAZM,CAqXauS,EAAY1G,MAAML,IAAI,SAAAkR,GAAA,OAAAA,EAAG3a,OAAkB+B,EAAM6T,aAAa5V,MACpF,OAAAkF,KACKnD,GACHuT,gBAAiBiF,EACjB/Q,iBACKzH,EAAMyH,YADXiK,KAEG1R,EAAMyO,YAFTtL,KAGOsL,GACH1G,kBACK0G,EAAY1G,QADjB5E,KAEOnD,EAAM6T,cAAc7J,GAAIwO,EAAWva,OAAMgY,aAAc,IAAIrP,KAAQ+N,IAAGC,gBApPzFlD,EAAAyE,EA2PKlN,sBAAsB,SAACjJ,EAAD6Y,GAAA,IAAUjH,EAAViH,EAAUjH,QAAV,OAAAzO,KAClBnD,GACH8T,YACK9T,EAAM8T,OACNlC,OA/PXF,EAAAyE,EAmQKjN,uBAAuB,SAAClJ,EAAD8Y,GAAwB,IAAdlH,EAAckH,EAAdlH,QAE1BjB,EAAU3Q,EAAM8T,QADEW,QAAS,SAAUD,UAAW,SAAUE,KAAM,cAC3B9C,IAC3C,IAAKjB,EACH,OAAO3Q,EAGT,IAAMyO,EAAczO,EAAMyH,YAAYzH,EAAMyO,aACtCwJ,EAAc/Q,UAAE9E,KAAKqM,EAAY1G,OAASiC,GAAIhK,EAAMuT,kBAQ1D,OAL0B,SAAAwF,GAAA,OAAA5V,KACrBnD,GACHyH,iBAAkBzH,EAAMyH,YAAxBiK,KAAsC1R,EAAMyO,YAA5CtL,KAA+DsL,EAAgBsK,OAIxEC,CADLf,GAEAlQ,kBACK0G,EAAY1G,MAAM4H,OAAO,SAAAsJ,GAAA,OAAAA,EAAGjP,KAAgBhK,EAAMuT,oBADvDpQ,KAEO8U,EAFPvG,KAEqBE,KAFrBC,OAAAC,EAEoCmG,EAAYrG,SAAiBjB,UAMnE9I,cACK4G,EAAY5G,SADjB6J,KAEGE,KAFHC,OAAAC,EAEiBrD,EAAY5G,SAAS+J,KAAUjB,UA/RxDe,EAAAyE,EAoSKtN,iBAAiB,SAAC7I,EAADkZ,GAAA,IAAUtH,EAAVsH,EAAUtH,QAAV,OAAAzO,KACbnD,GACHyH,iBACKzH,EAAMyH,YADXiK,KAEG1R,EAAMyO,YAFTtL,KAGOnD,EAAMyH,YAAYzH,EAAMyO,cAC3B1G,kBACK/H,EAAMyH,YAAYzH,EAAMyO,aAAa1G,QACxCb,UAAE0Q,OAEE5N,MAAImJ,EAAAjN,YACJjI,gBAAckV,EAAAjN,UAAS,GACvByO,EAAG,EACHC,EAAG,EACHF,QACAD,WACAD,UAAW,MAEb5C,aAtTduE,GA6TE9C,IASJ7B,KAAU0E,EAAA/W,SACRqS,KACAnL,EAAAoL,gBAAAC,EAAAyH,KAEK1S,eAAe,SAAAzG,GACd,IAAMoZ,EAASpF,EAAiBhU,GAChC,OAAAmD,KAAYnD,GAAOkV,cAAekE,EAAQC,cAAeD,MAJ/D1H,EAAAyH,EAOK/R,mBAAmB,SAAApH,GAClB,IAAMoZ,EAASpF,EAAiBhU,GAChC,OAAAmD,KAAYnD,GAAOkV,cAAekE,EAAQC,cAAeD,MAT/D1H,EAAAyH,EAYKjR,aAAa+M,GAZlBvD,EAAAyH,EAaKhR,aAAa8M,GAblBvD,EAAAyH,EAcKxQ,iBAAiBsM,GAdtBvD,EAAAyH,EAgBKtQ,iBAAiBoM,GAhBtBvD,EAAAyH,EAiBK/Q,aAAa6M,GAjBlBvD,EAAAyH,EAkBK7Q,aAAa2M,GAlBlBvD,EAAAyH,EAmBK5Q,gBAAgB0M,GAnBrBvD,EAAAyH,EAoBKrQ,iBAAiBmM,GApBtBvD,EAAAyH,EAqBKnQ,gBAAgBiM,GArBrBvD,EAAAyH,EAsBK/K,qBAAqB6G,GAtB1BvD,EAAAyH,EAuBK9K,cAAc4G,GAvBnBvD,EAAAyH,EAwBKjQ,uBAAuB+L,GAxB5BkE,GA0BE9F,IAQJ7B,KAAU0E,EAAA/W,SACRqS,KACAnL,EAAAoL,gBAAAC,EAAA4H,KAEKpR,aAAaoN,GAFlB5D,EAAA4H,EAGKnR,aAAamN,GAHlB5D,EAAA4H,EAIK3Q,iBAAiB2M,GAJtB5D,EAAA4H,EAKKzQ,iBAAiByM,GALtB5D,EAAA4H,EAMKlR,aAAakN,GANlB5D,EAAA4H,EAOKhR,aAAagN,GAPlB5D,EAAA4H,EAQK/Q,gBAAgB+M,GARrB5D,EAAA4H,EASKxQ,iBAAiBwM,GATtB5D,EAAA4H,EAUKtQ,gBAAgBsM,GAVrB5D,EAAA4H,EAWKnL,iBAAiBmH,GAXtB5D,EAAA4H,EAYKlL,qBAAqBkH,GAZ1B5D,EAAA4H,EAaKjL,cAAciH,GAbnB5D,EAAA4H,EAcKpQ,uBAAuBoM,GAd5B5D,EAAA4H,EAeK5Q,uBAAuB6M,EAAW,cAfvC7D,EAAA4H,EAgBKjQ,uBAAuBkM,EAAW,cAhBvC+D,GAkBEjG,cAIW7B,qQCvqBfnL,EAAA9I,EAAA,IAGA4T,MAFA5T,EAAA,MAEA4T,aAAA5T,EAAA,cAAAQ,EAAA8B,EAAAlB,EAAAO,GAAA,OAAAP,KAAAkB,EAAAtD,OAAA6B,eAAAyB,EAAAlB,GAAAD,MAAAQ,EAAAb,YAAA,EAAAgC,cAAA,EAAAD,UAAA,IAAAP,EAAAlB,GAAAO,EAAAW,EAAAlB,EAAAQ,SAAA,EAiBekH,EAAAoL,gBAAAC,EAAAC,KAEVrI,2BAA2B,SAACtJ,EAADiH,GAAA,IAAU2K,EAAV3K,EAAU2K,QAAV,OAAAzO,KACvBnD,GACHuZ,WAAY3H,MAJHF,EAAAC,EAOVjI,sBAAsB,SAAC1J,EAAD4J,GAAA,IAAUgI,EAAVhI,EAAUgI,QAAV,OAAAzO,KAClBnD,GACHwZ,aAAc5H,MATLF,EAAAC,EAYV9H,4BAA4B,SAAC7J,EAAD+J,GAAA,IAAU6H,EAAV7H,EAAU6H,QAAV,OAAAzO,KACxBnD,GACHyZ,YAAa7H,MAdJF,EAAAC,EAiBVvG,qBAAqB,SAACpL,EAADqK,GAAA,IAAUuH,EAAVvH,EAAUuH,QAAV,OAAAzO,KACjBnD,GACH6L,eACK7L,EAAM6L,UADX6F,KAEGE,EAAQ5H,GAAK4H,QArBPF,EAAAC,EAyBVtG,2BAA2B,SAACrL,EAADwK,GAAA,IAAUoH,EAAVpH,EAAUoH,QAAV,OAAAzO,KACvBnD,GACH0Z,WAAY9H,EAAQhW,KAAKqO,UA3BhB0H,IAPb4H,WAAY,KACZC,gBACAC,eACA5N,aACA6N,WAAY,KAAAC,IAAA,SAAA9Z,EAAAlB,EAAAO,GAAA,aAAA3C,OAAA6B,eAAAO,EAAA,cAAAD,OAAA,IAAAC,EAAAib,YAAAjb,EAAAkb,YAAAlb,EAAAmb,cAAAnb,EAAAob,mBAAApb,EAAAqb,oBAAA,ECjBd,IAAA7b,EAAAmI,GAAAnI,EAAAZ,EAAA,MAAAY,EAAAU,WAAAV,GAAAgB,QAAAhB,GAEa6b,mBAAiB,SAAAha,GAAA,OAASA,EAAM0G,MAAMe,YAAYzH,EAAM0G,MAAM+H,cAAgB,MAE9EsL,qBAAqB,SAAA/Z,GAChC,GAAKA,EAAM0G,OAAU1G,EAAM0G,MAAM+H,aAAgBzO,EAAM0G,MAAM6M,gBAA7D,CAIA,IAAM9E,EAAcuL,EAAeha,GACnC,OAAOyO,GAAevH,UAAE9E,KAAKqM,EAAY1G,OAASiC,GAAIhK,EAAM0G,MAAM6M,oBAGvDuG,gBAAgB,SAAA9Z,GAC3B,IAAKA,EAAM0G,MACT,SAGF,IAAMuT,EAAc/S,UAAEyO,KAAK3V,EAAM0G,MAAMwO,eACjCgF,EAAchT,UAAEyO,KAAK3V,EAAM0G,MAAM2S,eACjC1D,EAAOzO,UAAEiT,MAAMF,EAAaC,GAE5BE,EAAalT,UAAEiT,MAAMjT,UAAEmT,IAAI1E,EAAMsE,GAAc/S,UAAEmT,IAAI1E,EAAMuE,IAQjE,OANAhT,UAAEyO,KAAK3V,EAAM0G,MAAMe,aAAayM,QAAQ,SAAAvM,GAClC3H,EAAM0G,MAAM2S,cAAc1R,KAAU3H,EAAM0G,MAAMwO,cAAcvN,IAChEyS,EAAW9d,KAAKqL,KAIbyS,GAGIP,cAAc,SAAA7Z,GAAA,OAASA,EAAM0G,MAAMiN,UAAUvX,OAAS,GAEtDwd,cAAc,SAAA5Z,GAAA,OAASA,EAAM0G,MAAMkN,UAAUxX,OAAS,IAAAke,IAAA,SAAAza,EAAAlB,EAAAO,GAAA,aAAA3C,OAAA6B,eAAAO,EAAA,cAAAD,OAAA,ICnCnE,IAAAP,EAAAmI,GAAAnI,EAAAZ,EAAA,OAAAY,EAAAU,WAAAV,GAAAgB,QAAAhB,GAAAQ,EAAAQ,QAKoB,SAACob,GAAuD,IAAAtT,EAAAd,UAAA/J,OAAA,YAAA+J,UAAA,GAAAA,UAAA,MAAAqU,EAAAvT,EAA5CwT,oBAA4CD,EAAjC,IAAiCA,EAAAE,EAAAzT,EAA5B0T,YAC1CC,KACEC,KAEAC,EAAM,WACV,GAAKF,EAAMxe,OAAX,CAGA,IAAM0O,EAAM8P,EACZA,KAEAL,EAAQzP,GACL9D,KAAK,SAAA+T,GAAa,IAAAC,KAAAC,KAAAC,SAAA,IACjB,QAAAC,EAAAC,EAAiBtQ,EAAjBtM,OAAA6c,cAAAL,GAAAG,EAAAC,EAAA1G,QAAA4G,MAAAN,KAAsB,KAAXhR,EAAWmR,EAAAzc,MACpBmc,EAAS7Q,GAAI+B,QAAQgP,EAAU/Q,WACxB6Q,EAAS7Q,IAHD,MAAAwG,GAAAyK,KAAAC,EAAA1K,EAAA,aAAAwK,GAAAI,EAAAG,QAAAH,EAAAG,SAAA,WAAAN,EAAA,MAAAC,MAMlBM,MAAM,SAAAhL,GAAO,IAAAiL,KAAAC,KAAAC,SAAA,IACZ,QAAAC,EAAAC,EAAiB/Q,EAAjBtM,OAAA6c,cAAAI,GAAAG,EAAAC,EAAAnH,QAAA4G,MAAAG,KAAsB,KAAXzR,EAAW4R,EAAAld,MACpBmc,EAAS7Q,GAAI8R,OAAOtL,UACbqK,EAAS7Q,IAHN,MAAAwG,GAAAkL,KAAAC,EAAAnL,EAAA,aAAAiL,GAAAI,EAAAN,QAAAM,EAAAN,SAAA,WAAAG,EAAA,MAAAC,QA6BZI,EAAaC,YAAYlB,WA/C2CJ,EAAd,GAAcA,GAqD1E,OAAS1O,IA3BG,SAAAiQ,GAEV,GAAIpB,EAASoB,GACX,OAAOpB,EAASoB,GAAYC,QAG9BtB,EAAMte,KAAK2f,GACX,IAAM3c,EAAI,IAAIwM,UAAQ,SAACC,EAAS+P,GAC9BjB,EAASoB,IAAgBlQ,UAAS+P,YASpC,OAPAjB,EAASoB,GAAYC,QAAU5c,EAG3Bsb,EAAMxe,QAAUqe,GAClBK,IAGKxb,GAUK6c,QAJE,WACdC,cAAcL,qTCvDlBxe,EAAA,KACA,IAAAgB,EAAAe,EAAA/B,EAAA,MAAA+I,EAAAhH,EACA/B,EAAA,MAGA8e,KAFA9e,EAAA,MAAA+B,EACA/B,EAAA,MACAA,EAAA,KAAAqC,EAAAN,EAEA/B,EAAA,MAAArB,EAAAoD,EACA/B,EAAA,KAAAQ,EAAAuB,EAEA/B,EAAA,MACA4T,EAAA5T,EAAA,IAAAS,EAAAsB,EACA/B,EAAA,MACA+e,EAAA/e,EAAA,cAAA+B,EAAAO,GAAA,OAAAA,KAAAhB,WAAAgB,GAAAV,QAAAU,GAGA,IAAM0E,KAFNhH,EAAA,IAEciH,YACVD,IACFxB,UAAMwZ,SAASC,QAAQC,OAAvBC,cAAA,UAA2DnY,EAAMA,aAGlDoY,UAAYnG,MAAM1R,SAAS8X,QAApC9e,MAAG+e,MAIL9b,GAFJ+b,mBAAoB,eAEkBhf,IAAMA,EAExCif,grBAAiBvc,UAAMC,0DAEzBK,KAAKE,MAAMyM,gDAIX,IAAM9Q,KAAU2f,EAAA9M,iBAAgB1O,KAAKE,MAAMrE,QAAQgT,OAAO,SAAA/R,GAAA,OAAUA,EAAOof,YACrEra,EAAa,kBACjBsa,EAAA9d,QAAAsC,cAAA,qBACWV,EADX,eACmC8b,EADnC,eAKF,OACEI,EAAA9d,QAAAsC,cAAA,WACEwb,EAAA9d,QAAAsC,cAACyb,EAAA/d,SAAmB4B,WAAYA,EAAYJ,SAAUkc,EAAGjc,QAAY+B,WAAYA,IAChFhG,EAAQ+K,IAAI,SAAAT,EAA2B/K,GAA3B,IAAG6E,EAAHkG,EAAGlG,WAAYJ,EAAfsG,EAAetG,SAAf,OACXsc,EAAA9d,QAAAsC,cAACyb,EAAA/d,SAAmBH,IAAK9C,EAAG6E,WAAYA,EAAYJ,SAAUA,EAAUgC,WAAYA,aAjBxFoa,GAwBAI,GAAuB1P,6BAEvB2P,KAAoBf,EAAAgB,SADF,SAAArd,GAAA,OAAYrD,QAASqD,EAAMrD,UACAwgB,EAA7CC,CAAiEL,GAEvE1M,UAASK,OACPuM,EAAA9d,QAAAsC,cAAC4a,EAAAiB,UAASC,MAAOA,WACfN,EAAA9d,QAAAsC,cAAC2b,EAAD,OAEF5b,SAASgc,eAAe,SAAAC,GAAA,SAAA5d,EAAAlB,EAAAO,GAAA,aAAA3C,OAAA6B,eAAAO,EAAA,cAAAD,OAAA,QAAAP,EAAAe,EAAA,KChD1B3C,OAAAoZ,KAAA+H,GAAAxJ,QAAA,SAAAlV,GAAA,YAAAA,GAAA,eAAAA,GAAAzC,OAAA6B,eAAAT,EAAAqB,GAAAX,cAAAC,IAAA,kBAAAof,EAAA1e,QAXA,IAAA6P,EAAAtR,EAAA,IAAA+I,EAAA8M,EAEA7V,EAAA,MAAAM,EAAAuV,EACA7V,EAAA,MAAAqC,EAAAwT,EACA7V,EAAA,MAAArB,EAAAkX,EACA7V,EAAA,MAAAQ,EAAAqV,EACA7V,EAAA,MAAAC,EAAA4V,EACA7V,EAAA,MAAAS,EAAAoV,EACA7V,EAAA,MAAA6Y,EAAAhD,EACA7V,EAAA,MAAA+B,EAAA8T,EACA7V,EAAA,eAAA6V,EAAAvT,GAAA,OAAAA,KAAAhB,WAAAgB,GAAAV,QAAAU,GAGA,IAAM8d,KAAQ9O,EAAA+O,kBAAkBhS,kBAASlF,gBAAOmX,kBAASC,aAAIC,eAAMC,cAAKrhB,kBAASqR,wBAAeiQ,6BACjFN,oKCdf,IAAAxf,EAAAN,EAAAN,EAAA,MAAAgB,EAAAV,EACAN,EAAA,KAAA+I,EAAAzI,EACAN,EAAA,eAAAM,EAAAgC,GAAA,OAAAA,KAAAhB,WAAAgB,GAAAV,QAAAU,GAEA,IACasF,eAAa,IAAIC,UAYjB8Y,GAVA1Z,WAAW,WACtB,IAAM2Z,EAAWC,aAAaC,QAJb,YAMjB,QAAIF,GACK7H,KAAKE,MAAM2H,IAMTD,WAAW,SAAA3Z,GACtB6Z,aAAaE,QAdI,WAgBfhI,KAAKC,WACHhS,QACAga,KAAM,IAAI3X,QAId7D,UAAMwZ,SAASC,QAAQC,OAAvBC,cAAA,UAA2DnY,EAC3DY,EAAWvB,KAAK,eAGL4a,SAAS,WACpBJ,aAAaK,WA3BI,YA4BjBtZ,EAAWvB,KAAK,WAGL8a,QAAQ,SAACX,EAAMY,GAC1B,OAAO5b,UAAMkF,KAAK,cAAgB8V,OAAMY,aAAY3X,KAAK,SAAA/J,GACvD,IAAIA,EAAOrB,KAAKgjB,QAId,MAAM,IAAItc,MAAMrF,EAAOrB,KAAKijB,QAH5BX,EAASjhB,EAAOrB,KAAK2I,OACrBY,EAAWvB,KAAK,YAOTS,qBAAqB,WAChC,IAAIya,EAASV,aAAaC,QAAQ,kBAQlC,OANKS,IACHA,KAAS3O,EAAAhR,WACTif,aAAaE,QAAQ,iBAAkBQ,IAGzCtf,OAAOuf,gBAAkBD,EAClBA","file":"lite.2bc02e75f9b6dbe979ca.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([629,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react'\nimport axios from 'axios'\n\n/*****\n  DO NOT REQUIRE HEAVY DEPENDENCIES HERE\n  Avoid requiring lodash here\n  We're trying to keep these files as js-vanilla as possible\n  To keep `lite.bundle.js` as small as possible\n*****/\n\nimport InjectedComponent from '~/components/Injected'\nimport EventBus from '~/util/EventBus'\n\nexport default class InjectedModuleView extends React.Component {\n  state = {\n    moduleComponent: null\n  }\n\n  loadModule(modName, viewName, lite) {\n    const moduleName = modName || this.props.moduleName\n    const subView = viewName || this.props.viewName || 'default'\n    const isLite = lite || this.props.lite || false\n\n    if (moduleName === this.state.moduleName && subView == this.state.viewName) {\n      return\n    }\n\n    this.setState({ moduleComponent: null, moduleName: moduleName, viewName: viewName })\n\n    if (!window.botpress || !window.botpress[moduleName]) {\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.onload = () => {\n        script.onload = null\n        setImmediate(() => {\n          this.setViewInState(moduleName, subView, isLite)\n        })\n      }\n\n      const shortName = moduleName.replace(/^botpress-/i, '').replace(/^@botpress\\//i, '')\n\n      if (isLite) {\n        script.src = `/js/modules/${shortName}/${subView}`\n      } else {\n        script.src = `/js/modules/${shortName}`\n      }\n\n      document.getElementsByTagName('head')[0].appendChild(script)\n    } else {\n      this.setState({ moduleComponent: null })\n      setImmediate(() => {\n        this.setViewInState(moduleName, subView, isLite)\n      })\n    }\n  }\n\n  setViewInState(moduleName, viewName, isLite) {\n    const lookupNames =\n      moduleName.startsWith('@botpress/') || moduleName.startsWith('botpress-')\n        ? [moduleName]\n        : ['@botpress/' + moduleName, 'botpress-' + moduleName]\n\n    const viewResolve = name => {\n      const prop = isLite ? 'default' : viewName\n      return window.botpress && window.botpress[name] && window.botpress[name][prop]\n    }\n\n    const module = viewResolve(lookupNames.find(viewResolve))\n\n    if (!module) {\n      this.setState({\n        error: new Error(`Subview \"${viewName}\" doesn't exist for module \"${moduleName}\"`),\n        moduleComponent: null\n      })\n    } else {\n      this.setState({\n        moduleComponent: module,\n        error: null\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.loadModule()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.loadModule(nextProps.moduleName, nextProps.viewName, nextProps.lite)\n  }\n\n  render() {\n    const { moduleComponent } = this.state\n\n    if (this.state.error) {\n      console.log('Error rendering plugin', this.state.error)\n      return (this.props.onNotFound && this.props.onNotFound(this.state.error)) || null\n    }\n\n    if (!moduleComponent) {\n      return null\n    }\n\n    const bp = {\n      events: EventBus.default,\n      axios: axios\n    }\n\n    const extraProps = this.props.extraProps || {}\n\n    return <InjectedComponent component={moduleComponent} name={this.props.moduleName} bp={bp} {...extraProps} />\n  }\n}\n","/* global io */\n\nimport EventEmitter2 from 'eventemitter2'\nimport io from 'socket.io-client'\n\nimport { getToken, authEvents, getUniqueVisitorId } from '~/util/Auth'\n\nclass EventBus extends EventEmitter2 {\n  constructor() {\n    super({\n      wildcard: true,\n      maxListeners: 100\n    })\n\n    this.onAny(this.dispatchClientEvent)\n\n    authEvents.on('new_token', this.setup)\n  }\n\n  dispatchSocketEvent = event => {\n    this.emit(event.name, event.data, 'server')\n  }\n\n  dispatchClientEvent = (name, data, from) => {\n    if (from === 'server') {\n      // we sent this event ourselves\n      return\n    }\n\n    const socket = name.startsWith('guest.') ? this.guestSocket : this.adminSocket\n    socket && socket.emit('event', { name, data })\n  }\n\n  setup = () => {\n    const query = {\n      visitorId: getUniqueVisitorId()\n    }\n\n    if (window.AUTH_ENABLED) {\n      const token = getToken()\n      if (!!token) {\n        Object.assign(query, { token: token.token })\n      }\n    }\n\n    if (this.adminSocket) {\n      this.adminSocket.off('event', this.dispatchEvent)\n      this.adminSocket.disconnect()\n    }\n\n    if (this.guestSocket) {\n      this.guestSocket.off('event', this.dispatchEvent)\n      this.guestSocket.disconnect()\n    }\n\n    const socketUrl = window.location.origin\n\n    this.adminSocket = io(socketUrl + '/admin', { query })\n    this.adminSocket.on('event', this.dispatchSocketEvent)\n\n    this.guestSocket = io(socketUrl + '/guest', { query })\n    this.guestSocket.on('event', this.dispatchSocketEvent)\n  }\n}\n\nEventBus.default = new EventBus()\n\nexport default EventBus\n","import _ from 'lodash'\nimport generate from 'nanoid/generate'\n\nexport const hashCode = str => {\n  let hash = 0\n  if (str.length === 0) {\n    return hash\n  }\n\n  for (let i = 0; i < str.length; i++) {\n    const chr = str.charCodeAt(i)\n    hash = (hash << 5) - hash + chr\n    hash |= 0\n  }\n  return hash\n}\n\n// https://davidwalsh.name/caret-end\nexport const moveCursorToEnd = el => {\n  if (!el) {\n    return\n  }\n\n  if (typeof el.selectionStart == 'number') {\n    el.selectionStart = el.selectionEnd = el.value.length\n    el.focus()\n  } else if (typeof el.createTextRange != 'undefined') {\n    el.focus()\n    const range = el.createTextRange()\n    range.collapse(false)\n    range.select()\n  }\n}\n\nexport const prettyId = (length = 10) => generate('1234567890abcdef', length)\n","import { createAction } from 'redux-actions'\nimport axios from 'axios'\nimport _ from 'lodash'\n\nimport BatchRunner from './BatchRunner'\n\n// Flows\nexport const requestFlows = createAction('FLOWS/REQUEST')\nexport const receiveFlows = createAction('FLOWS/RECEIVE', flows => flows, () => ({ receiveAt: new Date() }))\n\nexport const fetchFlows = () => dispatch => {\n  dispatch(requestFlows())\n\n  axios.get('/api/flows/all').then(({ data }) => {\n    const flows = _.keyBy(data, 'name')\n    dispatch(receiveFlows(flows))\n  })\n}\n\nexport const requestSaveFlows = createAction('FLOWS/SAVE')\nexport const receiveSaveFlows = createAction('FLOWS/SAVE/RECEIVE', flows => flows, () => ({ receiveAt: new Date() }))\n\nexport const saveAllFlows = () => (dispatch, getState) => {\n  dispatch(requestSaveFlows())\n\n  const flows = _.values(getState().flows.flowsByName).map(flow => ({\n    flow: flow.name,\n    location: flow.location,\n    startNode: flow.startNode,\n    catchAll: flow.catchAll,\n    links: flow.links,\n    nodes: flow.nodes,\n    skillData: flow.skillData\n  }))\n\n  axios.post('/api/flows/save', flows).then(() => {\n    dispatch(receiveSaveFlows())\n  })\n}\n\nexport const updateFlow = createAction('FLOWS/FLOW/UPDATE')\nexport const renameFlow = createAction('FLOWS/FLOW/RENAME')\nexport const createFlow = createAction('FLOWS/CREATE')\nexport const switchFlow = createAction('FLOWS/SWITCH')\nexport const deleteFlow = createAction('FLOWS/DELETE')\nexport const duplicateFlow = createAction('FLOWS/DUPLICATE')\nexport const handleRefreshFlowLinks = createAction('FLOWS/FLOW/UPDATE_LINKS')\nexport const refreshFlowsLinks = () => dispatch => setTimeout(() => dispatch(handleRefreshFlowLinks()), 10)\n\nexport const updateFlowNode = createAction('FLOWS/FLOW/UPDATE_NODE')\nexport const switchFlowNode = createAction('FLOWS/FLOW/SWITCH_NODE')\nexport const createFlowNode = createAction('FLOWS/FLOW/CREATE')\nexport const removeFlowNode = createAction('FLOWS/FLOW/REMOVE')\nexport const copyFlowNode = createAction('FLOWS/NODE/COPY')\nexport const pasteFlowNode = createAction('FLOWS/NODE/PASTE')\nexport const copyFlowNodeElement = createAction('FLOWS/NODE_ELEMENT/COPY')\nexport const pasteFlowNodeElement = createAction('FLOWS/NODE_ELEMENT/PASTE')\nexport const openFlowNodeProps = createAction('FLOWS/FLOW/OPEN_NODE_PROPS')\nexport const closeFlowNodeProps = createAction('FLOWS/FLOW/CLOSE_NODE_PROPS')\n\nexport const handleFlowEditorUndo = createAction('FLOWS/EDITOR/UNDO')\nexport const handleFlowEditorRedo = createAction('FLOWS/EDITOR/REDO')\n\nexport const flowEditorUndo = () => dispatch => {\n  dispatch(handleFlowEditorUndo())\n  dispatch(refreshFlowsLinks())\n}\n\nexport const flowEditorRedo = () => dispatch => {\n  dispatch(handleFlowEditorRedo())\n  dispatch(refreshFlowsLinks())\n}\n\nexport const setDiagramAction = createAction('FLOWS/FLOW/SET_ACTION')\n\n// Content\nexport const receiveContentCategories = createAction('CONTENT/CATEGORIES/RECEIVE')\nexport const fetchContentCategories = () => dispatch =>\n  axios.get('/api/content/categories').then(({ data }) => {\n    dispatch(receiveContentCategories(data))\n  })\n\nexport const receiveContentItems = createAction('CONTENT/ITEMS/RECEIVE')\nexport const fetchContentItems = ({ id, from, count, searchTerm }) => dispatch =>\n  axios\n    .get(`/api/content/items`, { params: { categoryId: id, from, count, searchTerm } })\n    .then(({ data }) => dispatch(receiveContentItems(data)))\n\nexport const receiveContentItemsRecent = createAction('CONTENT/ITEMS/RECEIVE_RECENT')\nexport const fetchContentItemsRecent = ({ searchTerm, count = 5, categoryId = 'all' }) => dispatch =>\n  axios\n    .get(`/api/content/items`, { params: { categoryId, count, searchTerm, orderBy: ['createdOn', 'desc'] } })\n    .then(({ data }) => dispatch(receiveContentItemsRecent(data)))\n\nconst getBatchedContentItems = ids =>\n  axios.get(`/api/content/items-batched/${ids.join(',')}`).then(({ data }) =>\n    data.reduce((acc, item, i) => {\n      acc[ids[i]] = item\n      return acc\n    }, {})\n  )\n\nconst getBatchedContentRunner = BatchRunner(getBatchedContentItems)\n\nconst getBatchedContentItem = id => getBatchedContentRunner.add(id)\n\nconst getSingleContentItem = id => axios.get(`/api/content/items/${id}`).then(({ data }) => data)\n\nexport const receiveContentItem = createAction('CONTENT/ITEMS/RECEIVE_ONE')\nexport const fetchContentItem = (id, { force = false, batched = false } = {}) => (dispatch, getState) => {\n  if (!id || (!force && getState().content.itemsById[id])) {\n    return Promise.resolve()\n  }\n  return (batched ? getBatchedContentItem(id) : getSingleContentItem(id)).then(data =>\n    dispatch(receiveContentItem(data))\n  )\n}\n\nexport const receiveContentItemsCount = createAction('CONTENT/ITEMS/RECEIVE_COUNT')\nexport const fetchContentItemsCount = (categoryId = 'all') => dispatch =>\n  axios\n    .get(`/api/content/items/count`, { params: { categoryId } })\n    .then(data => dispatch(receiveContentItemsCount(data)))\n\nexport const upsertContentItem = ({ categoryId, formData, modifyId }) => () =>\n  axios.post(`/api/content/categories/${categoryId}/items/${modifyId || ''}`, { formData })\n\nexport const deleteContentItems = data => () => axios.post('/api/content/categories/all/bulk_delete', data)\n\n// License\nexport const licenseChanged = createAction('LICENSE/CHANGED')\nexport const fetchLicense = () => dispatch => {\n  axios.get('/api/license').then(({ data }) => {\n    dispatch(licenseChanged(data))\n  })\n}\n\n// UI\nexport const toggleLicenseModal = createAction('UI/TOGGLE_LICENSE_MODAL')\nexport const toggleAboutModal = createAction('UI/TOGGLE_ABOUT_MODAL')\nexport const viewModeChanged = createAction('UI/VIEW_MODE_CHANGED')\nexport const updateGlobalStyle = createAction('UI/UPDATE_GLOBAL_STYLE')\n\n// User\nexport const userReceived = createAction('USER/RECEIVED')\nexport const fetchUser = authEnabled => dispatch => {\n  if (!authEnabled) {\n    dispatch(\n      userReceived({\n        id: 'anonymous',\n        roles: null\n      })\n    )\n    return\n  }\n  axios.get('/api/my-account').then(res => {\n    dispatch(userReceived(res.data))\n  })\n}\n\n// Bot\nexport const botInfoReceived = createAction('BOT/INFO_RECEIVED')\nexport const fetchBotInformation = () => dispatch => {\n  axios.get('/api/bot/information').then(information => {\n    dispatch(botInfoReceived(information.data))\n  })\n}\n\n// Modules\nexport const modulesReceived = createAction('MODULES/RECEIVED')\nexport const fetchModules = () => dispatch => {\n  axios.get('/api/modules').then(res => {\n    dispatch(modulesReceived(res.data))\n  })\n}\n\n// Notifications\nexport const allNotificationsReceived = createAction('NOTIFICATIONS/ALL_RECEIVED')\nexport const newNotificationsReceived = createAction('NOTIFICATIONS/NEW_RECEIVED')\nexport const fetchNotifications = () => dispatch => {\n  axios.get('/api/notifications/inbox').then(res => {\n    dispatch(allNotificationsReceived(res.data))\n  })\n}\n\nexport const replaceNotifications = allNotifications => dispatch => {\n  dispatch(allNotificationsReceived(allNotifications))\n}\n\nexport const addNotifications = notifications => dispatch => {\n  dispatch(newNotificationsReceived(notifications))\n}\n\n// Skills\nexport const buildNewSkill = createAction('SKILLS/BUILD')\nexport const cancelNewSkill = createAction('SKILLS/BUILD/CANCEL')\nexport const insertNewSkill = createAction('SKILLS/INSERT')\nexport const insertNewSkillNode = createAction('SKILLS/INSERT/NODE')\nexport const updateSkill = createAction('SKILLS/UPDATE')\n\nexport const editSkill = createAction('SKILLS/EDIT')\nexport const requestEditSkill = nodeId => (dispatch, getState) => {\n  const state = getState()\n  const node = _.find(state.flows.flowsByName[state.flows.currentFlow].nodes, { id: nodeId })\n  const flow = node && state.flows.flowsByName[node.flow]\n\n  flow &&\n    dispatch(\n      editSkill({\n        skillId: 'skill-' + node.skill,\n        flowName: node.flow,\n        nodeId: nodeId,\n        data: flow.skillData\n      })\n    )\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport * as actions from '~/actions'\nimport reducers from './reducers'\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ name: 'Botpress', actionCreators: actions })\n    : compose\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\n\nexport default createStore(reducers, enhancer)\n","import _ from 'lodash'\n\nexport const moduleViewNames = (modules = [], position = 'overlay') =>\n  _.flatten(\n    (modules || []).filter(Boolean).map(module =>\n      _.filter(module.plugins || [], { position }).map(plugin => ({\n        moduleName: module.name,\n        viewName: plugin.entry\n      }))\n    )\n  )\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport nanoid from 'nanoid'\n\nexport default class InjectedComponent extends Component {\n  static propTypes = {\n    component: PropTypes.func.isRequired\n  }\n\n  componentId = `component-${nanoid()}`\n\n  componentDidUpdate() {\n    this.internalRender()\n  }\n\n  componentDidMount() {\n    this.internalRender()\n  }\n\n  componentWillUnmount() {\n    try {\n      ReactDOM.unmountComponentAtNode(ReactDOM.findDOMNode(this))\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  render() {\n    return <div className=\"component-mount\" />\n  }\n\n  // TODO: can't we do it in normal render and let the component be trashed normally too?\n  // Maybe React 16 error boundaries are what we actually want\n  internalRender() {\n    const node = ReactDOM.findDOMNode(this)\n\n    try {\n      const props = Object.assign({}, this.props)\n      delete props['component']\n      ReactDOM.render(React.createElement(this.props.component, props), node)\n    } catch (err) {\n      const element = (\n        <div className=\"panel panel-danger\">\n          <div className=\"panel-heading\">Could not display component</div>\n          <div className=\"panel-body\">\n            <h4>An error occurred while loading the component</h4>\n            <p>{err.message}</p>\n          </div>\n          {/* TODO Put documentation / help here */}\n          <div className=\"panel-footer\">\n            Developer? <a href=\"https://github.com/botpress/botpress/tree/master/docs\">click here</a>\n            to see why this might happen\n          </div>\n        </div>\n      )\n\n      ReactDOM.render(element, node)\n      console.error && console.error('Error loading component', err)\n    }\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport { Howl } from 'howler'\nimport _ from 'lodash'\n\nimport { allNotificationsReceived, newNotificationsReceived } from '~/actions'\n\nconst defaultState = []\nconst sound = new Howl({ src: ['/audio/notification.mp3'] })\n\nconst reducer = handleActions(\n  {\n    [allNotificationsReceived]: (state, { payload }) => [...payload],\n    [newNotificationsReceived]: (state, { payload }) => {\n      if (_.some(payload, { sound: true })) {\n        sound.play()\n      }\n\n      return [...state.unshift(...payload)]\n    }\n  },\n  defaultState\n)\n\nexport default reducer\n","import { handleActions } from 'redux-actions'\n\nimport { modulesReceived, buildNewSkill, cancelNewSkill, insertNewSkill, editSkill, updateSkill } from '~/actions'\n\nconst defaultState = {\n  installed: [],\n  builder: {\n    opened: false,\n    data: {},\n    skillId: null,\n    action: null,\n    editFlowName: null,\n    editNodeId: null\n  }\n}\n\nconst reducer = handleActions(\n  {\n    [modulesReceived]: (state, { payload }) => ({\n      ...state,\n      installed: payload.filter(module => module.name.startsWith('skill-')).map(module => ({\n        id: module.name,\n        name: module.menuText,\n        icon: module.menuIcon\n      }))\n    }),\n\n    [buildNewSkill]: (state, { payload }) => ({\n      ...state,\n      builder: {\n        ...state.builder,\n        opened: true,\n        action: 'new',\n        data: {},\n        skillId: payload\n      }\n    }),\n\n    [cancelNewSkill]: state => ({\n      ...state,\n      builder: {\n        ...state.builder,\n        opened: false\n      }\n    }),\n\n    [insertNewSkill]: (state, { payload }) => ({\n      ...state,\n      builder: {\n        ...state.builder,\n        opened: false,\n        data: payload.data,\n        skillId: payload.skillId\n      }\n    }),\n\n    [editSkill]: (state, { payload }) => ({\n      ...state,\n      builder: {\n        ...state.builder,\n        opened: true,\n        action: 'edit',\n        skillId: payload.skillId,\n        data: payload.data,\n        editFlowName: payload.flowName,\n        editNodeId: payload.nodeId\n      }\n    }),\n\n    [updateSkill]: state => ({\n      ...state,\n      builder: {\n        ...state.builder,\n        opened: false\n      }\n    })\n  },\n  defaultState\n)\n\nexport default reducer\n","import { handleActions } from 'redux-actions'\n\nimport { modulesReceived } from '~/actions'\n\nconst defaultState = []\n\nconst reducer = handleActions(\n  {\n    [modulesReceived]: (state, { payload }) => [...payload]\n  },\n  defaultState\n)\n\nexport default reducer\n","import { handleActions } from 'redux-actions'\n\nimport { botInfoReceived } from '~/actions'\n\nconst defaultState = {}\n\nconst reducer = handleActions(\n  {\n    [botInfoReceived]: (state, { payload }) => ({ ...payload })\n  },\n  defaultState\n)\n\nexport default reducer\n","import { handleActions } from 'redux-actions'\n\nimport { userReceived } from '~/actions'\n\nconst defaultState = {}\n\nconst reducer = handleActions(\n  {\n    [userReceived]: (state, { payload }) => ({ ...state, ...payload })\n  },\n  defaultState\n)\n\nexport default reducer\n","import { handleActions } from 'redux-actions'\n\nimport { toggleLicenseModal, toggleAboutModal, viewModeChanged, updateGlobalStyle } from '~/actions'\n\nconst defaultState = {\n  licenseModalOpened: false,\n  aboutModalOpened: false,\n  viewMode: -1,\n  customStyle: {}\n}\n\nconst reducer = handleActions(\n  {\n    [toggleLicenseModal]: state => ({\n      ...state,\n      licenseModalOpened: !state.licenseModalOpened\n    }),\n    [toggleAboutModal]: state => ({\n      ...state,\n      aboutModalOpened: !state.aboutModalOpened\n    }),\n    [viewModeChanged]: (state, { payload }) => ({\n      ...state,\n      viewMode: payload.toString()\n    }),\n    [updateGlobalStyle]: (state, { payload }) => ({\n      ...state,\n      customStyle: Object.assign({}, state.customStyle, payload)\n    })\n  },\n  defaultState\n)\n\nexport default reducer\n","import { handleActions } from 'redux-actions'\n\nimport { licenseChanged } from '~/actions'\n\nconst defaultState = {\n  name: null,\n  text: null,\n  licensed: null,\n  status: null\n}\n\nconst reducer = handleActions(\n  {\n    [licenseChanged]: (state, { payload }) => {\n      return { ...state, ...payload }\n    }\n  },\n  defaultState\n)\n\nexport default reducer\n","import { handleActions } from 'redux-actions'\nimport reduceReducers from 'reduce-reducers'\nimport _ from 'lodash'\n\nimport { hashCode, prettyId } from '~/util'\n\nimport {\n  requestFlows,\n  requestSaveFlows,\n  receiveSaveFlows,\n  receiveFlows,\n  switchFlow,\n  updateFlow,\n  handleRefreshFlowLinks,\n  renameFlow,\n  updateFlowNode,\n  switchFlowNode,\n  openFlowNodeProps,\n  closeFlowNodeProps,\n  setDiagramAction,\n  createFlowNode,\n  copyFlowNode,\n  pasteFlowNode,\n  copyFlowNodeElement,\n  pasteFlowNodeElement,\n  createFlow,\n  deleteFlow,\n  duplicateFlow,\n  removeFlowNode,\n  handleFlowEditorUndo,\n  handleFlowEditorRedo,\n  insertNewSkill,\n  insertNewSkillNode,\n  updateSkill\n} from '~/actions'\n\nconst MAX_UNDO_STACK_SIZE = 25\nconst MIN_HISTORY_RECORD_INTERVAL = 500\n\nconst defaultState = {\n  flowsByName: {},\n  fetchingFlows: false,\n  currentFlow: null,\n  currentFlowNode: null,\n  showFlowNodeProps: false,\n  currentDiagramAction: null,\n  currentSnapshot: null,\n  undoStack: [],\n  redoStack: [],\n  nodeInBuffer: null, // TODO: move it to buffer.node\n  buffer: { action: null, transition: null }\n}\n\nconst findNodesThatReferenceFlow = (state, flowName) =>\n  _.flatten(_.values(state.flowsByName).map(flow => flow.nodes))\n    .filter(node => node.flow === flowName || _.find(node.next, { node: flowName }))\n    .map(node => node.id)\n\nconst computeFlowsHash = state => {\n  const hashAction = (hash, action) => {\n    if (_.isArray(action)) {\n      action.forEach(c => {\n        if (_.isString(c)) {\n          hash += c\n        } else {\n          hash += c.node\n          hash += c.condition\n        }\n      })\n    } else {\n      hash += 'null'\n    }\n\n    return hash\n  }\n\n  return _.values(state.flowsByName).reduce((obj, curr) => {\n    if (!curr) {\n      return obj\n    }\n\n    let buff = ''\n    buff += curr.name\n    buff += curr.startNode\n\n    if (curr.catchAll) {\n      buff = hashAction(buff, curr.catchAll.onReceive)\n      buff = hashAction(buff, curr.catchAll.onEnter)\n      buff = hashAction(buff, curr.catchAll.next)\n    }\n\n    _.orderBy(curr.nodes, 'id').forEach(node => {\n      buff = hashAction(buff, node.onReceive)\n      buff = hashAction(buff, node.onEnter)\n      buff = hashAction(buff, node.next)\n      buff += node.id\n      buff += node.flow\n      buff += node.type\n      buff += node.name\n      buff += node.x\n      buff += node.y\n    })\n\n    _.orderBy(curr.links, l => l.source + l.target).forEach(link => {\n      buff += link.source\n      buff += link.target\n      link.points &&\n        link.points.forEach(p => {\n          buff += p.x\n          buff += p.y\n        })\n    })\n\n    obj[curr.name] = hashCode(buff)\n    return obj\n  }, {})\n}\n\nconst updateCurrentHash = state => ({ ...state, currentHashes: computeFlowsHash(state) })\n\nconst createSnapshot = state => ({\n  ..._.pick(state, ['currentFlow', 'currentFlowNode', 'flowsByName']),\n  createdAt: new Date()\n})\n\nconst recordHistory = state => {\n  if (!state.currentSnapshot || new Date() - state.currentSnapshot.createdAt < MIN_HISTORY_RECORD_INTERVAL) {\n    return { ...state, currentSnapshot: createSnapshot(state) }\n  }\n  return {\n    ...state,\n    undoStack: [state.currentSnapshot, ...state.undoStack.slice(0, MAX_UNDO_STACK_SIZE)],\n    redoStack: [],\n    currentSnapshot: createSnapshot(state)\n  }\n}\n\nconst popHistory = stackName => state => {\n  const oppositeStack = stackName === 'undoStack' ? 'redoStack' : 'undoStack'\n  if (state[stackName].length === 0) {\n    return state\n  }\n  const currentSnapshot = state[stackName][0]\n  return {\n    ...state,\n    currentSnapshot,\n    currentFlow: currentSnapshot.currentFlow,\n    currentFlowNode: currentSnapshot.currentFlowNode,\n    flowsByName: currentSnapshot.flowsByName,\n    [stackName]: state[stackName].slice(1),\n    [oppositeStack]: [state.currentSnapshot, ...state[oppositeStack]]\n  }\n}\n\nconst copyName = (siblingNames, nameToCopy) => {\n  const copies = siblingNames.filter(name => name.startsWith(`${nameToCopy}-copy`))\n\n  if (!copies.length) {\n    return `${nameToCopy}-copy`\n  }\n\n  let i = 1\n  while (true) {\n    if (!copies.find(name => name === `${nameToCopy}-copy-${i}`)) {\n      return `${nameToCopy}-copy-${i}`\n    } else {\n      i += 1\n    }\n  }\n}\n\nconst doRenameFlow = ({ flow, name, flows }) =>\n  flows.reduce((obj, f) => {\n    if (f.name === flow) {\n      f.name = name\n      f.location = name\n    }\n\n    if (f.nodes) {\n      let json = JSON.stringify(f.nodes)\n      json = json.replace(flow, name)\n      f.nodes = JSON.parse(json)\n    }\n\n    obj[f.name] = f\n\n    return obj\n  }, {})\n\nconst doCreateNewFlow = name => ({\n  version: '0.1',\n  name: name,\n  location: name,\n  startNode: 'entry',\n  catchAll: {},\n  links: [],\n  nodes: [\n    {\n      id: prettyId(),\n      name: 'entry',\n      onEnter: [],\n      onReceive: null,\n      next: [],\n      x: 100,\n      y: 100\n    }\n  ]\n})\n\n// *****\n// Reducer that deals with non-recordable (no snapshot taking)\n// *****\n\nlet reducer = handleActions(\n  {\n    [requestFlows]: state => ({\n      ...state,\n      fetchingFlows: true\n    }),\n\n    [receiveFlows]: (state, { payload }) => {\n      const flows = _.keys(payload).filter(key => !payload[key].skillData)\n      const defaultFlow = _.keys(payload).includes('main.flow.json') ? 'main.flow.json' : _.first(flows)\n      const newState = {\n        ...state,\n        fetchingFlows: false,\n        flowsByName: payload,\n        currentFlow: state.currentFlow || defaultFlow\n      }\n      return {\n        ...newState,\n        currentSnapshot: createSnapshot(newState)\n      }\n    },\n\n    [requestSaveFlows]: state => ({\n      ...state,\n      savingFlows: true\n    }),\n\n    [receiveSaveFlows]: state => ({\n      ...state,\n      savingFlows: false\n    }),\n\n    [switchFlowNode]: (state, { payload }) => ({\n      ...state,\n      currentFlowNode: payload\n    }),\n\n    [openFlowNodeProps]: state => ({\n      ...state,\n      showFlowNodeProps: true\n    }),\n\n    [closeFlowNodeProps]: state => ({\n      ...state,\n      showFlowNodeProps: false\n    }),\n\n    [switchFlow]: (state, { payload }) => {\n      if (state.currentFlow === payload) {\n        return state\n      }\n\n      return {\n        ...state,\n        currentFlowNode: null,\n        currentFlow: payload\n      }\n    },\n\n    [setDiagramAction]: (state, { payload }) => ({\n      ...state,\n      currentDiagramAction: payload\n    }),\n\n    [handleRefreshFlowLinks]: state => ({\n      ...state,\n      flowsByName: {\n        ...state.flowsByName,\n        [state.currentFlow]: {\n          ...state.flowsByName[state.currentFlow],\n          nodes: state.flowsByName[state.currentFlow].nodes.map(node => ({ ...node, lastModified: new Date() }))\n        }\n      }\n    })\n  },\n  defaultState\n)\n\nreducer = reduceReducers(\n  reducer,\n  handleActions(\n    {\n      [renameFlow]: (state, { payload }) => ({\n        ...state,\n        flowsByName: doRenameFlow({\n          flow: state.currentFlow,\n          name: payload,\n          flows: _.values(state.flowsByName)\n        }),\n        currentFlow: payload\n      }),\n\n      [updateFlow]: (state, { payload }) => {\n        const currentFlow = state.flowsByName[state.currentFlow]\n        const nodes = !payload.links\n          ? currentFlow.nodes\n          : currentFlow.nodes.map(node => {\n              const nodeLinks = payload.links.filter(link => link.source === node.id)\n              const next = node.next.map((value, index) => {\n                const link = nodeLinks.find(link => Number(link.sourcePort.replace('out', '')) === index)\n                const targetNode = _.find(currentFlow.nodes, { id: (link || {}).target })\n                let remapNode = ''\n\n                if (value.node.includes('.flow.json') || value.node === 'END' || value.node.startsWith('#')) {\n                  remapNode = value.node\n                }\n\n                return { ...value, node: (targetNode && targetNode.name) || remapNode }\n              })\n\n              return { ...node, next, lastModified: new Date() }\n            })\n\n        const links = (payload.links || currentFlow.links).map(link => ({\n          ...link,\n          points: link.points.map(({ x, y }) => ({ x: Math.round(x), y: Math.round(y) }))\n        }))\n\n        return {\n          ...state,\n          flowsByName: {\n            ...state.flowsByName,\n            [state.currentFlow]: { ...currentFlow, nodes, ...payload, links }\n          }\n        }\n      },\n\n      [createFlow]: (state, { payload: name }) => ({\n        ...state,\n        flowsByName: {\n          ...state.flowsByName,\n          [name]: doCreateNewFlow(name)\n        },\n        currentFlow: name,\n        currentFlowNode: null\n      }),\n\n      [deleteFlow]: (state, { payload: name }) => ({\n        ...state,\n        currentFlow: state.currentFlow === name ? null : state.currentFlow,\n        currentFlowNode: state.currentFlow === name ? null : state.currentFlowNode,\n        flowsByName: _.omit(state.flowsByName, name)\n      }),\n\n      // Inserting a new skill essentially:\n      // 1. creates a new flow\n      // 2. creates a new \"skill\" node\n      // 3. puts that new node in the \"insert buffer\", waiting for user to place it on the canvas\n      [insertNewSkill]: (state, { payload }) => {\n        const skillId = payload.skillId\n          .replace(/^botpress-skill-/i, '')\n          .replace(/^@botpress\\/skill-/i, '')\n          .replace(/^skill-/i, '')\n        const flowRandomId = prettyId(6)\n        const flowName = `skills/${skillId}-${flowRandomId}.flow.json`\n\n        const newFlow = Object.assign({}, payload.generatedFlow, {\n          skillData: payload.data,\n          name: flowName,\n          location: flowName\n        })\n\n        const newNode = {\n          id: 'skill-' + flowRandomId,\n          type: 'skill-call',\n          skill: skillId,\n          name: `${skillId}-${flowRandomId}`,\n          flow: flowName,\n          next: payload.transitions || [],\n          onEnter: null,\n          onReceive: null\n        }\n\n        return {\n          ...state,\n          currentDiagramAction: 'insert_skill',\n          nodeInBuffer: newNode,\n          flowsByName: {\n            ...state.flowsByName,\n            [newFlow.name]: newFlow\n          }\n        }\n      },\n\n      [updateSkill]: (state, { payload }) => {\n        const modifiedFlow = Object.assign({}, state.flowsByName[payload.editFlowName], payload.generatedFlow, {\n          skillData: payload.data,\n          name: payload.editFlowName,\n          location: payload.editFlowName\n        })\n\n        const nodes = state.flowsByName[state.currentFlow].nodes.map(node => {\n          if (node.id !== payload.editNodeId) {\n            return node\n          }\n\n          return Object.assign({}, node, {\n            next: payload.transitions\n          })\n        })\n\n        return {\n          ...state,\n          flowsByName: {\n            ...state.flowsByName,\n            [payload.editFlowName]: modifiedFlow,\n            [state.currentFlow]: {\n              ...state.flowsByName[state.currentFlow],\n              nodes: nodes\n            }\n          }\n        }\n      },\n\n      [insertNewSkillNode]: (state, { payload }) => ({\n        ...state,\n        flowsByName: {\n          ...state.flowsByName,\n          [state.currentFlow]: {\n            ...state.flowsByName[state.currentFlow],\n            nodes: [\n              ...state.flowsByName[state.currentFlow].nodes,\n              _.merge(state.nodeInBuffer, _.pick(payload, ['x', 'y']))\n            ]\n          }\n        }\n      }),\n\n      [duplicateFlow]: (state, { payload: { flowNameToDuplicate, name } }) => {\n        return {\n          ...state,\n          flowsByName: {\n            ...state.flowsByName,\n            [name]: {\n              ...state.flowsByName[flowNameToDuplicate],\n              name,\n              location: name,\n              nodes: state.flowsByName[flowNameToDuplicate].nodes.map(node => ({\n                ...node,\n                id: prettyId()\n              }))\n            }\n          },\n          currentFlow: name,\n          currentFlowNode: null\n        }\n      },\n\n      [updateFlowNode]: (state, { payload }) => {\n        const currentFlow = state.flowsByName[state.currentFlow]\n        const currentNode = _.find(state.flowsByName[state.currentFlow].nodes, { id: state.currentFlowNode })\n        const needsUpdate = name => name === (currentNode || {}).name && payload.name\n        return {\n          ...state,\n          flowsByName: {\n            ...state.flowsByName,\n            [state.currentFlow]: {\n              ...currentFlow,\n              startNode: needsUpdate(currentFlow.startNode) ? payload.name : currentFlow.startNode,\n              nodes: currentFlow.nodes.map(node => {\n                if (node.id !== state.currentFlowNode) {\n                  return {\n                    ...node,\n                    next: node.next.map(transition => ({\n                      ...transition,\n                      node: needsUpdate(transition.node) ? payload.name : transition.node\n                    }))\n                  }\n                }\n\n                return { ...node, ...payload, lastModified: new Date() }\n              })\n            }\n          }\n        }\n      },\n\n      [removeFlowNode]: (state, { payload }) => {\n        const flowsToRemove = []\n        const nodeToRemove = _.find(state.flowsByName[state.currentFlow].nodes, { id: payload })\n\n        if (nodeToRemove.type === 'skill-call') {\n          if (findNodesThatReferenceFlow(state, nodeToRemove.flow).length <= 1) {\n            // Remove the skill flow if that was the only node referencing it\n            flowsToRemove.push(nodeToRemove.flow)\n          }\n        }\n\n        return {\n          ...state,\n          flowsByName: {\n            ..._.omit(state.flowsByName, flowsToRemove),\n            [state.currentFlow]: {\n              ...state.flowsByName[state.currentFlow],\n              nodes: state.flowsByName[state.currentFlow].nodes.filter(node => node.id !== payload)\n            }\n          }\n        }\n      },\n\n      [copyFlowNode]: state => {\n        const node = _.find(state.flowsByName[state.currentFlow].nodes, { id: state.currentFlowNode })\n        if (!node) {\n          return state\n        }\n        return {\n          ...state,\n          nodeInBuffer: { ...node, next: node.next.map(item => ({ ...item, node: '' })) }\n        }\n      },\n\n      [pasteFlowNode]: (state, { payload: { x, y } }) => {\n        const currentFlow = state.flowsByName[state.currentFlow]\n        const newNodeId = prettyId()\n        const name = copyName(currentFlow.nodes.map(({ name }) => name), state.nodeInBuffer.name)\n        return {\n          ...state,\n          currentFlowNode: newNodeId,\n          flowsByName: {\n            ...state.flowsByName,\n            [state.currentFlow]: {\n              ...currentFlow,\n              nodes: [\n                ...currentFlow.nodes,\n                { ...state.nodeInBuffer, id: newNodeId, name, lastModified: new Date(), x, y }\n              ]\n            }\n          }\n        }\n      },\n\n      [copyFlowNodeElement]: (state, { payload }) => ({\n        ...state,\n        buffer: {\n          ...state.buffer,\n          ...payload\n        }\n      }),\n\n      [pasteFlowNodeElement]: (state, { payload }) => {\n        const SECTION_TYPES = { onEnter: 'action', onReceive: 'action', next: 'transition' }\n        const element = state.buffer[SECTION_TYPES[payload]]\n        if (!element) {\n          return state\n        }\n\n        const currentFlow = state.flowsByName[state.currentFlow]\n        const currentNode = _.find(currentFlow.nodes, { id: state.currentFlowNode })\n\n        // TODO: use this as a helper function in other reducers\n        const updateCurrentFlow = modifier => ({\n          ...state,\n          flowsByName: { ...state.flowsByName, [state.currentFlow]: { ...currentFlow, ...modifier } }\n        })\n\n        if (currentNode) {\n          return updateCurrentFlow({\n            nodes: [\n              ...currentFlow.nodes.filter(({ id }) => id !== state.currentFlowNode),\n              { ...currentNode, [payload]: [...(currentNode[payload] || []), element] }\n            ]\n          })\n        }\n\n        return updateCurrentFlow({\n          catchAll: {\n            ...currentFlow.catchAll,\n            [payload]: [...currentFlow.catchAll[payload], element]\n          }\n        })\n      },\n\n      [createFlowNode]: (state, { payload }) => ({\n        ...state,\n        flowsByName: {\n          ...state.flowsByName,\n          [state.currentFlow]: {\n            ...state.flowsByName[state.currentFlow],\n            nodes: [\n              ...state.flowsByName[state.currentFlow].nodes,\n              _.merge(\n                {\n                  id: prettyId(),\n                  name: `node-${prettyId(4)}`,\n                  x: 0,\n                  y: 0,\n                  next: [],\n                  onEnter: [],\n                  onReceive: null\n                },\n                payload\n              )\n            ]\n          }\n        }\n      })\n    },\n    defaultState\n  )\n)\n\n// *****\n// Reducer that creates the 'initial hash' of flows (for dirty detection)\n// Resets the 'dirty' state when a flow is saved\n// *****\n\nreducer = reduceReducers(\n  reducer,\n  handleActions(\n    {\n      [receiveFlows]: state => {\n        const hashes = computeFlowsHash(state)\n        return { ...state, currentHashes: hashes, initialHashes: hashes }\n      },\n\n      [receiveSaveFlows]: state => {\n        const hashes = computeFlowsHash(state)\n        return { ...state, currentHashes: hashes, initialHashes: hashes }\n      },\n\n      [updateFlow]: updateCurrentHash,\n      [renameFlow]: updateCurrentHash,\n      [updateFlowNode]: updateCurrentHash,\n\n      [createFlowNode]: updateCurrentHash,\n      [createFlow]: updateCurrentHash,\n      [deleteFlow]: updateCurrentHash,\n      [duplicateFlow]: updateCurrentHash,\n      [removeFlowNode]: updateCurrentHash,\n      [pasteFlowNode]: updateCurrentHash,\n      [insertNewSkillNode]: updateCurrentHash,\n      [updateSkill]: updateCurrentHash,\n      [pasteFlowNodeElement]: updateCurrentHash\n    },\n    defaultState\n  )\n)\n\n// *****\n// Reducer that records state of the flows for undo/redo\n// *****\n\nreducer = reduceReducers(\n  reducer,\n  handleActions(\n    {\n      [updateFlow]: recordHistory,\n      [renameFlow]: recordHistory,\n      [updateFlowNode]: recordHistory,\n      [createFlowNode]: recordHistory,\n      [createFlow]: recordHistory,\n      [deleteFlow]: recordHistory,\n      [duplicateFlow]: recordHistory,\n      [removeFlowNode]: recordHistory,\n      [pasteFlowNode]: recordHistory,\n      [insertNewSkill]: recordHistory,\n      [insertNewSkillNode]: recordHistory,\n      [updateSkill]: recordHistory,\n      [pasteFlowNodeElement]: recordHistory,\n      [handleFlowEditorUndo]: popHistory('undoStack'),\n      [handleFlowEditorRedo]: popHistory('redoStack')\n    },\n    defaultState\n  )\n)\n\nexport default reducer\n","import { handleActions } from 'redux-actions'\nimport _ from 'lodash'\n\nimport {\n  receiveContentCategories,\n  receiveContentItems,\n  receiveContentItemsRecent,\n  receiveContentItem,\n  receiveContentItemsCount,\n  receiveContentSchema\n} from '~/actions'\n\nconst defaultState = {\n  categories: null,\n  currentItems: [],\n  recentItems: [],\n  itemsById: {},\n  itemsCount: 0\n}\n\nexport default handleActions(\n  {\n    [receiveContentCategories]: (state, { payload }) => ({\n      ...state,\n      categories: payload\n    }),\n\n    [receiveContentItems]: (state, { payload }) => ({\n      ...state,\n      currentItems: payload\n    }),\n\n    [receiveContentItemsRecent]: (state, { payload }) => ({\n      ...state,\n      recentItems: payload\n    }),\n\n    [receiveContentItem]: (state, { payload }) => ({\n      ...state,\n      itemsById: {\n        ...state.itemsById,\n        [payload.id]: payload\n      }\n    }),\n\n    [receiveContentItemsCount]: (state, { payload }) => ({\n      ...state,\n      itemsCount: payload.data.count\n    })\n  },\n  defaultState\n)\n","import _ from 'lodash'\n\nexport const getCurrentFlow = state => state.flows.flowsByName[state.flows.currentFlow] || null\n\nexport const getCurrentFlowNode = state => {\n  if (!state.flows || !state.flows.currentFlow || !state.flows.currentFlowNode) {\n    return\n  }\n\n  const currentFlow = getCurrentFlow(state)\n  return currentFlow && _.find(currentFlow.nodes, { id: state.flows.currentFlowNode })\n}\n\nexport const getDirtyFlows = state => {\n  if (!state.flows) {\n    return []\n  }\n\n  const currentKeys = _.keys(state.flows.currentHashes)\n  const initialKeys = _.keys(state.flows.initialHashes)\n  const keys = _.union(currentKeys, initialKeys)\n\n  const dirtyFlows = _.union(_.xor(keys, currentKeys), _.xor(keys, initialKeys))\n\n  _.keys(state.flows.flowsByName).forEach(flow => {\n    if (state.flows.initialHashes[flow] !== state.flows.currentHashes[flow]) {\n      dirtyFlows.push(flow)\n    }\n  })\n\n  return dirtyFlows\n}\n\nexport const canFlowUndo = state => state.flows.undoStack.length > 0\n\nexport const canFlowRedo = state => state.flows.redoStack.length > 0\n","import Promise from 'bluebird'\n\n// `execute` must be a function accepting an array of resource IDs\n// and returning a promise resolving to an object mapping\n// from ID to the data object\nconst BatchRunner = (execute, { maxQueue = 100, maxInterval = 20 } = {}) => {\n  let queue = []\n  const promises = {}\n\n  const run = () => {\n    if (!queue.length) {\n      return\n    }\n    const ids = queue\n    queue = []\n\n    execute(ids)\n      .then(resources => {\n        for (const id of ids) {\n          promises[id].resolve(resources[id])\n          delete promises[id]\n        }\n      })\n      .catch(err => {\n        for (const id of ids) {\n          promises[id].reject(err)\n          delete promises[id]\n        }\n      })\n  }\n\n  const add = resourceId => {\n    // don't fetch the same resource twice\n    if (promises[resourceId]) {\n      return promises[resourceId].promise\n    }\n\n    queue.push(resourceId)\n    const p = new Promise((resolve, reject) => {\n      promises[resourceId] = { resolve, reject }\n    })\n    promises[resourceId].promise = p\n\n    // drain the queue when the max length is reached\n    if (queue.length >= maxQueue) {\n      run()\n    }\n\n    return p\n  }\n\n  // drain the queue on a regular basis\n  const intervalId = setInterval(run, maxInterval)\n\n  const destroy = () => {\n    clearInterval(intervalId)\n  }\n\n  return { add, destroy }\n}\n\nexport default BatchRunner\n","import 'babel-polyfill'\nimport React from 'expose-loader?React!react'\nimport ReactDOM from 'expose-loader?ReactDOM!react-dom'\nimport PropTypes from 'expose-loader?PropTypes!prop-types'\nimport ReactBootstrap from 'expose-loader?ReactBootstrap!react-bootstrap'\nimport { connect } from 'react-redux'\nimport { Provider } from 'react-redux'\nimport queryString from 'query-string'\nimport axios from 'axios'\n\nimport store from './store'\nimport { fetchModules } from './actions'\nimport InjectedModuleView from '~/components/PluginInjectionSite/module'\nimport { moduleViewNames } from '~/util/Modules'\nimport { getToken } from '~/util/Auth'\n\nconst token = getToken()\nif (token) {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token.token}`\n}\n\nconst { m, v } = queryString.parse(location.search)\nconst alternateModuleNames = {\n  'platform-webchat': 'channel-web'\n}\nconst moduleName = alternateModuleNames[m] || m\n\nclass LiteView extends React.Component {\n  componentDidMount() {\n    this.props.fetchModules()\n  }\n\n  render() {\n    const modules = moduleViewNames(this.props.modules.filter(module => module.isPlugin))\n    const onNotFound = () => (\n      <h1>\n        Module ${moduleName} with view ${v} not found\n      </h1>\n    )\n\n    return (\n      <div>\n        <InjectedModuleView moduleName={moduleName} viewName={v} lite={true} onNotFound={onNotFound} />\n        {modules.map(({ moduleName, viewName }, i) => (\n          <InjectedModuleView key={i} moduleName={moduleName} viewName={viewName} onNotFound={onNotFound} />\n        ))}\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = { fetchModules }\nconst mapStateToProps = state => ({ modules: state.modules })\nconst LiteViewConnected = connect(mapStateToProps, mapDispatchToProps)(LiteView)\n\nReactDOM.render(\n  <Provider store={store}>\n    <LiteViewConnected />\n  </Provider>,\n  document.getElementById('app')\n)\n","import { combineReducers } from 'redux'\n\nimport content from './content'\nimport flows from './flows'\nimport license from './license'\nimport ui from './ui'\nimport user from './user'\nimport bot from './bot'\nimport modules from './modules'\nimport skills from './skills'\nimport notifications from './notifications'\nexport * from './selectors'\n\nconst bpApp = combineReducers({ content, flows, license, ui, user, bot, modules, notifications, skills })\nexport default bpApp\n","import EventEmitter2 from 'eventemitter2'\nimport axios from 'axios'\nimport nanoid from 'nanoid'\n\nconst storageKey = 'bp/token'\nexport const authEvents = new EventEmitter2()\n\nexport const getToken = () => {\n  const tokenStr = localStorage.getItem(storageKey)\n\n  if (tokenStr) {\n    return JSON.parse(tokenStr)\n  }\n\n  return false\n}\n\nexport const setToken = token => {\n  localStorage.setItem(\n    storageKey,\n    JSON.stringify({\n      token,\n      time: new Date()\n    })\n  )\n\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n  authEvents.emit('new_token')\n}\n\nexport const logout = () => {\n  localStorage.removeItem(storageKey)\n  authEvents.emit('logout')\n}\n\nexport const login = (user, password) => {\n  return axios.post('/api/login', { user, password }).then(result => {\n    if (result.data.success) {\n      setToken(result.data.token)\n      authEvents.emit('login')\n    } else {\n      throw new Error(result.data.reason)\n    }\n  })\n}\n\nexport const getUniqueVisitorId = () => {\n  let userId = localStorage.getItem('bp/socket/user')\n\n  if (!userId) {\n    userId = nanoid()\n    localStorage.setItem('bp/socket/user', userId)\n  }\n\n  window.__BP_VISITOR_ID = userId\n  return userId\n}\n"],"sourceRoot":""}